{"version":3,"sources":["webpack:///webpack/bootstrap b4c38e28f119cf11cff9","webpack:///./src/base_tile.ts","webpack:///./src/tiledata.ts","webpack:///./src/audio.ts","webpack:///./src/gamedata.ts","webpack:///./src/world.ts","webpack:///./src/ui_objects/mute_button.ts","webpack:///./src/ui_objects/speech_bubble.ts","webpack:///./src/Boot.ts","webpack:///./src/gamelogic.ts","webpack:///./src/menus/chapterselect.ts","webpack:///./src/menus/loading.ts","webpack:///./src/menus/mainmenu.ts","webpack:///./src/UI.ts","webpack:///./src/menus/policymenu.ts","webpack:///./src/tiles/agricultural_tile.ts","webpack:///./src/tiles/aquifer_tile.ts","webpack:///./src/tiles/industrial_tile.ts","webpack:///./src/tiles/lake_source_tile.ts","webpack:///./src/tiles/lake_tile.ts","webpack:///./src/tiles/pipe_tile.ts","webpack:///./src/tiles/residential_tile.ts","webpack:///./src/tiles/source_tile.ts","webpack:///./src/tiles/treatment_tile.ts","webpack:///./src/tiles/waste_water_treatment_tile.ts","webpack:///./src/tiles/watertower_tile.ts","webpack:///./src/ui_objects/construction_button.ts","webpack:///./src/ui_objects/construction_menu.ts","webpack:///./src/ui_objects/delete_button.ts","webpack:///./src/ui_objects/home_button.ts","webpack:///./src/ui_objects/info_panel.ts","webpack:///./src/ui_objects/notification.ts","webpack:///./src/ui_objects/pause_button.ts","webpack:///./src/ui_objects/policy_option.ts","webpack:///./src/ui_objects/repair_button.ts","webpack:///./src/app.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b4c38e28f119cf11cff9","/**\n * Created by nathanmishler on 2/13/17.\n */\nimport {GameLogic} from \"./gamelogic\"\nimport {TileData} from \"./tiledata\";\nimport {GameData} from \"./gamedata\";\nimport {TileInterface} from \"./interfaces/tileinfo\";\nimport {LakeTile} from \"./tiles/lake_tile\";\n\nexport class BaseTile implements TileInterface{\n\n    // Connection to game logic for highlights\n    game_logic:GameLogic;\n    _base_sprite:Phaser.Sprite;\n\n    _touch_sprite:Phaser.Sprite;\n\n    _highlight_sprite:Phaser.Sprite;\n\n    // Grid position\n    _x:number;\n    _y:number;\n\n    // Items that every type has\n    connectible:boolean = false;\n    cost:number;\n    current_population:number;\n    current_quality:number;\n    current_units:number = 0;\n    current_water_storage:number;\n    current_water_usage:number;\n    evaporation_per_usage:number;\n    input_quality:number = 0;\n    input_units:number = 0;\n    integrity:number;\n    max_integrity:number;\n    level:number;\n    max_water_storage:number;\n    max_water_usage:number;\n    max_population:number = 0;\n    min_population:number;\n    money_generated_per_usage:number;\n    public name: string = \"empty\";\n    output_quality:number = 0;\n    output_units:number = 0;\n    population_generated_per_usage:number;\n    quality_drop_per_usage:number;\n    recharge_amount:number;\n    treatment_modifier:number;\n    turns_to_die:number;\n    usage_decrease_with_deficit:number;\n    usage_increase_with_surplus:number;\n    degrade_per_tick:number = 0;\n    repair_cost:number = 0;\n\n    current_tint:number = 0xffffff;\n\n    display_name:string = \"\";\n\n    tooltip:string;\n\n    in_flow:boolean = false;\n\n    is_source:boolean = false;\n\n    // A tile consists of a basic sprite and a highlight tile\n    constructor (_game:GameLogic, x:number, y:number) {\n        this.game_logic = _game;\n\n        this._touch_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x,y), 'watergame', \"base_square\");\n        this._touch_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._touch_sprite);\n\n        this._touch_sprite.inputEnabled = true;\n        this._touch_sprite.input.pixelPerfectOver = true;\n        this._touch_sprite.input.pixelPerfectClick = true;\n        this._touch_sprite.alpha = 0.1;\n\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x,y), 'watergame',  \"base_square\");\n        this._base_sprite.alpha = 0;\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n\n        this._highlight_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x,y), 'watergame', \"highlightsquare\");\n        this._highlight_sprite.anchor = new Phaser.Point(0.5, 0.5);\n\n        this.game_logic._world_group.add(this._highlight_sprite);\n\n        this._highlight_sprite.visible = false;\n\n        this._x = x;\n        this._y = y;\n\n        // Now tiles can get input, so we know if we are over them or not\n        //this._base_sprite.inputEnabled = true;\n        //this._base_sprite.input.pixelPerfectOver = true;\n        //this._base_sprite.input.pixelPerfectClick = true;\n\n        _game.game.input.onDown.add(this.Clicked, this);\n\n        this.SetStats();\n\n    }\n\n    Destroy() {\n        this._base_sprite.destroy(true);\n        this._touch_sprite.destroy(true);\n        this._highlight_sprite.destroy(true);\n    }\n\n    // Asks if the tile is being hovered over\n    CheckHover () {\n\n        if( this._touch_sprite.input != undefined) {\n\n            //return this._touch_sprite.input.checkPointerOver(this.game_logic.game.input.activePointer);\n            return this._touch_sprite.input.pointerOver();\n        }else{\n            return false;\n\n        }\n    }\n\n    // Show the highlight if its sprite exists\n    ShowHighlight () {\n\n        if ( this._highlight_sprite == undefined ){\n            return;\n        }\n\n        this._highlight_sprite.visible = true;\n\n        if( this.game_logic._delete_mode) {\n            if( this.name != \"empty\") {\n                this.game_logic.UI.notification.showMessage(\"Delete \" + this.name);\n            }else{\n                this.game_logic.UI.notification.hideMessage();\n            }\n        }else if(this.game_logic._repair_mode){\n            if( this.name != \"empty\") {\n\n                let amt = this.repair_cost;\n                let message = \"Integrity currently: \" + + this.GetPercentIntegrity() + \"%\";\n                message += \"\\n\";\n                message += \"Repair for $\" + amt.toString();\n\n                this.game_logic.UI.notification.showMessage(message);\n            }else{\n                this.game_logic.UI.notification.hideMessage();\n            }\n\n        }else {\n            // Grab a lake tile from our current spot\n            let tempLake:LakeTile = this.game_logic._world.lakes[this._x][this._y];\n\n            let message:string = \"\";\n\n            if (this.name != \"empty\") {\n\n\n\n                message += this.display_name;\n                message += \"\\n\";\n                if(this.name == \"treatment\"){\n                    message += \"Modules: \" + this.GetTypesString() + \"\\n\";\n\n\n                }\n                message += \"Integrity: \" + this.GetPercentIntegrity() + \"%\";\n            }\n            if (tempLake.name == \"lake\"){\n                if (message != \"\"){\n                    message += \"\\n\";\n                }\n                message += \"Lake Water: \" + tempLake.current_water_storage.toFixed(0) + \" / \" + tempLake.max_water_storage ;\n                message += \"\\nWater Quality: \" + parseFloat((Math.round(tempLake.current_quality * 100) / 100).toString()).toFixed(2);  ;\n            }\n\n            if (message != \"\") {\n                this.game_logic.UI.notification.showMessage(message);\n            }\n            else {\n                this.game_logic.UI.notification.hideMessage();\n            }\n        }\n\n    }\n\n    GetTypesString() {\n        return \"\";\n    }\n\n\n    // Hides the highlight sprite if it exists\n    HideHightlight () {\n\n        if ( this._highlight_sprite == undefined ){\n            return;\n        }\n\n        this._highlight_sprite.visible = false;\n    }\n\n    // Visible tile positions, based on tiles that are 80x40\n    DeriveGridX(x:number, y:number) {\n        return this.game_logic._world.world_x + ( 40 * x) + ( 40 * y );\n    }\n\n    DeriveGridY(x:number, y:number) {\n        return this.game_logic._world.world_y - ( 20 * y ) + ( 20 * x );\n    }\n\n    // Turn off this tile - currently used for lakes so they don't show as visible\n    Disable() {\n        this._touch_sprite.inputEnabled = false;\n        this._base_sprite.visible = false;\n        this._highlight_sprite.visible = false;\n    }\n\n    Clicked() {\n\n        // if( !this.game_logic.UI.IsInfoPanelVisible() ) {\n        if( !this.game_logic.UI.IsAModalOpen() ) {\n            if (this.CheckHover()) {\n\n                if((!this.game_logic._delete_mode && !this.game_logic._repair_mode) && (this.name == \"empty\")) {\n                    this.game_logic._construction_menu.Show(this._base_sprite.x, this._base_sprite.y, this._x, this._y);\n                }else if (this.game_logic._delete_mode && this.name != \"empty\" ) {\n                    this.game_logic._world.Disappear(this);\n                }else if (this.game_logic._repair_mode && this.name != \"empty\" ) {\n                    let amt = this.repair_cost;\n\n                    if(  this.game_logic._world.game_money - amt >= 0 ) {\n                        this.game_logic._world.game_money -= amt;\n                        this.integrity = this.max_integrity;\n                    }\n                }\n\n            }\n        }\n    }\n\n    // code for updating appearance on tiles\n    Update() {\n\n\n        if( this.name != \"empty\" ){\n            this.SetTint();\n        }\n\n\n    }\n\n    SetTint() {\n        if( this.GetPercentIntegrity() <= 25 ) {\n            if(this.current_tint != 0xff0000 ) {\n                this._base_sprite.tint = 0xff0000;\n                this.current_tint = 0xff0000;\n            }\n        }else if( this.GetPercentIntegrity() <= 50 ){\n            if(this.current_tint = 0xFF4500 ) {\n                this._base_sprite.tint = 0xFF4500;\n                this.current_tint = 0xFF4500;\n            }\n        }else if( this.GetPercentIntegrity() <= 75 ){\n            if( this.current_tint != 0xEEB422 ) {\n                this._base_sprite.tint = 0xEEB422;\n                this.current_tint = 0xEEB422;\n            }\n        }else if(this.current_tint != 0xffffff){\n            this.current_tint = 0xffffff;\n            this._base_sprite.tint = 0xffffff;\n        }\n    }\n\n    Degrade(amt:number) {\n\n        amt = this.degrade_per_tick;\n\n\n\n        // TODO - make item show when it's about to delete, maybe items have a different degradation rate?\n        let final_amt:number = amt;\n\n        if(Math.random() > .5 ){\n            final_amt -= Math.floor(Math.random());\n        }else{\n            final_amt += Math.floor(Math.random());\n        }\n\n        if(final_amt < 0){\n            final_amt = 0;\n        }\n\n        this.integrity -= final_amt;\n\n        // When an item has broken, delete it from the world\n        if(this.integrity <= 0){\n            this.game_logic._world.Disappear(this);\n        }\n    }\n\n    // A function for setting up an item's stats, which might be loaded from a file in the future\n    SetStats() {\n        let tile_data = TileData.getTile(this.constructor[\"name\"]);\n        for(let stat in tile_data){\n            if(tile_data.hasOwnProperty(stat)){\n                this[stat] = tile_data[stat];\n            }\n        }\n\n\n\n        // Since we have access to game logic - can we store that data? I am thinking...\n        // Store scenerio objects somewhere - maybe in world. Make a dictionary of modifiers\n        // Then retrieve them here based on tile names\n\n        for( var key in this.game_logic._world.scenario_data ) {\n            let new_key = key.split(\"|\");\n\n            if ( this.constructor[\"name\"] == new_key[0]){\n\n                this[new_key[1]] = this.game_logic._world.scenario_data[key];\n            }\n        }\n\n        if( !tile_data.hasOwnProperty(\"display_name\")) {\n            this.display_name = this.name;\n        }\n\n        this.max_integrity = this.integrity;\n    }\n\n    GetPercentIntegrity() {\n        return Math.floor((this.integrity / this.max_integrity) * 100);\n    }\n\n    SetInFlow(set:boolean) {\n        this.in_flow = set;\n    }\n\n    IsInFlow() {\n        return this.in_flow;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/base_tile.ts","export class TileData{\r\n    private static _instance:TileData = new TileData();\r\n    private _game:Phaser.Game;\r\n    private _tile_data:Object;\r\n\r\n    public static get Instance():TileData{\r\n        return this._instance;\r\n    }\r\n\r\n    public static init(game:Phaser.Game){\r\n        this._instance._game = game;\r\n        this._instance._tile_data = game.cache.getJSON(\"tile_data\");\r\n    }\r\n    public static getTile(key:string){\r\n        if(key === \"BaseTile\"){\r\n            return this._instance._tile_data[\"default\"];\r\n        } else if(this._instance._tile_data.hasOwnProperty(key)){\r\n            //console.log(\"Found \" + key);\r\n            return {...this._instance._tile_data[\"default\"], ...this._instance._tile_data[key]};\r\n        } else {\r\n            //console.log(\"Not found...\" + key);\r\n            throw new Error(\"Tile type \" + key + \" not found in TileData.\");\r\n        }\r\n    }\r\n    public static getTileByType(type:string){\r\n\r\n        for(let key in this._instance._tile_data){\r\n            //console.log(key);\r\n            //console.log(this._instance._tile_data[key].name);\r\n            if(this._instance._tile_data.hasOwnProperty(key) &&\r\n                (this._instance._tile_data[key].name === type ||\r\n                    (this._instance._tile_data[key].hasOwnProperty(\"upgrades\") && this._instance._tile_data[key].upgrades.hasOwnProperty(type)))){\r\n\r\n                return this._instance._tile_data[key];\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiledata.ts","export class AudioManager{\r\n    private _game:Phaser.Game;\r\n    private static _instance:AudioManager = new AudioManager();\r\n    private _sounds:{[k:string]:Phaser.Sound} = {};\r\n    private _current_music:Phaser.Sound;\r\n\r\n    private constructor(){\r\n\r\n    }\r\n\r\n    public static get volume():number{\r\n        if(this._instance._game){\r\n            return AudioManager.Instance._game.sound.volume;\r\n        }\r\n    }\r\n\r\n    public static get muted():boolean{\r\n        return this._instance._game.sound.mute;\r\n    }\r\n\r\n    public static init(game:Phaser.Game){\r\n        this._instance._game = game;\r\n    }\r\n\r\n    public static get Instance():AudioManager{\r\n        return this._instance;\r\n    }\r\n\r\n    public static RegisterSound(key:string, loop:boolean = false){\r\n        if (this._instance._sounds.hasOwnProperty(key)){\r\n            // TODO: Handle duplicate sound IDs more gracefully\r\n            console.error(\"Sound with id \\\"\" + key + \"\\\" already exists.\");\r\n        } else if (this._instance !== null){\r\n            this._instance._sounds[key] = this._instance._game.add.sound(key, 1, loop, true);\r\n        } else {\r\n            console.error(\"Sounds cannot be registered before AudioManger.init has been called.\")\r\n        }\r\n    }\r\n\r\n    public static play(key:string){\r\n        this._instance._sounds[key].play();\r\n    }\r\n\r\n    // Stop the currently playing music, and start a new track\r\n    public static playMusic(key:string){\r\n        console.log(this._instance._sounds);\r\n        if(this._instance._current_music){\r\n            this._instance._current_music.stop();\r\n        }\r\n        this._instance._current_music = this._instance._sounds[key];\r\n        this._instance._current_music.play();\r\n\r\n    }\r\n\r\n    public static toggleMute(){\r\n        if(AudioManager.Instance._game.sound.mute){\r\n            AudioManager.Instance._game.sound.mute = false;\r\n            localStorage.setItem(\"mute\", \"false\");\r\n        } else {\r\n            AudioManager.Instance._game.sound.mute = true;\r\n            localStorage.setItem(\"mute\", \"true\");\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/audio.ts","export class GameData{\n    private static _instance:GameData = new GameData();\n    private _game:Phaser.Game;\n    private _game_data:Object;\n\n    public static get Instance():GameData{\n        return this._instance;\n    }\n\n    public static init(game:Phaser.Game){\n        this._instance._game = game;\n        this._instance._game_data = game.cache.getJSON(\"vars\");\n    }\n    public static getVar(key:string){\n       if(this._instance._game_data.hasOwnProperty(key)){\n            return this._instance._game_data[key];\n        } else {\n            console.log(\"Not found...\" + key);\n            throw new Error(\"Tile type \" + key + \" not found in TileData.\");\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/gamedata.ts","/**\n * Created by nathanmishler on 2/13/17.\n */\n\nimport {BaseTile} from \"./base_tile\"\nimport {GameLogic} from \"./gamelogic\"\nimport {GameData} from \"./gamedata\"\nimport {ResidentialTile} from \"./tiles/residential_tile\"\nimport {SourceTile} from \"./tiles/source_tile\"\nimport {AquiferTile} from \"./tiles/aquifer_tile\";\nimport {LakeTile} from \"./tiles/lake_tile\"\nimport {LakeSourceTile} from \"./tiles/lake_source_tile\"\nimport {PipeTile} from \"./tiles/pipe_tile\"\nimport {WatertowerTile} from \"./tiles/watertower_tile\"\nimport {IndustrialTile} from \"./tiles/industrial_tile\"\nimport {AgriculturalTile} from \"./tiles/agricultural_tile\"\nimport {TreatmentTile} from \"./tiles/treatment_tile\"\nimport {WasteWaterTreatmentTile} from \"./tiles/waste_water_treatment_tile\"\nimport {TileData} from \"./tiledata\";\n\n// This class holds the current displayed world\nexport class World{\n\n    static NORTH:number = 0;\n    static EAST:number = 1;\n    static SOUTH:number = 2;\n    static WEST:number = 3;\n\n    // The positions on screen to display the grid\n    world_x:number;\n    world_y:number;\n\n    // Our grid of tiles\n    tiles:BaseTile[][];\n    public lakes:BaseTile[][];\n\n    // a tracked list of objects for flow\n    sources:SourceTile[] = [];\n    visited:BaseTile[] = [];\n    pending:BaseTile[] = [];\n    lakeInputs:LakeTile[] = [];\n    visitedLakes:LakeTile[] = [];\n\n    scenario_aquifer:AquiferTile = null;\n\n    // The usable water in the system\n    total_usable_water:number = 0;\n    last_turn_usable_water:number = 0;\n\n    // Survey string for the world. Can be empty\n    public survey_url:string = \"\";\n\n    // Money Tracking\n    private _game_money:number = 0;\n    get game_money():number{\n        return Number(this._game_money);\n    }\n    set game_money(num){\n        //console.log(num);\n        this._game_money = Number(num);\n        this._game._construction_menu.updateButtons(this._game_money);\n    }\n    money_generated:number = 0;\n    this_turn_income:number = 0;\n\n    // Population Tracking\n    new_population:number = 0;\n    population:number = 0;\n\n    grid_width:number = 10;\n    grid_height:number = 10;\n\n    // A reference to the Phaser instance so we can pass it to the tiles we own\n    _game:GameLogic;\n\n    background:Phaser.Sprite;\n    background_pol:Phaser.Sprite;\n\n    // Win Conditions\n    has_complete_circuit:boolean = false;\n\n    win_condition:string = \"\";\n\n    goal_text:string = \"\";\n    instruction_text:string = \"\";\n    victory_text:string = \"\";\n\n    // Various checkers for scenerios\n    win_complete_circuit:boolean = false;\n    build_list:string[];\n    link_all_items:boolean = false;\n    win_population:number = -1;\n    win_money:number = -1;\n    num_ind:number = -1;\n    num_res:number = -1;\n    num_agr:number = -1;\n\n    is_sandbox:boolean = false;\n\n    scenario_data:Object = new Object();\n\n    constructor( game:GameLogic ) {\n        this._game = game;\n\n        this.world_x = 50;\n        this.world_y = 400;\n\n\n\n    }\n\n    init( level_name:string = \"scenario_1\" ) {\n\n        this.sources = [];\n\n        let map_json = this._game.game.cache.getJSON(level_name);\n\n        this.scenario_data = map_json.properties;\n\n        // TODO make this a real init that loads maps\n        this.background = this._game.game.add.sprite(0, 0, map_json.properties.background_image);\n        this._game._world_group.add(this.background);\n\n\n\n        this.background.width = 800;\n        this.background.height = 600;\n\n        this.background_pol = this._game.game.add.sprite(0, 0, map_json.properties.background_image +\"_pol\" );\n        this._game._world_group.add(this.background_pol);\n        this.background_pol.width = 800;\n        this.background_pol.height = 600;\n        this.background_pol.alpha = 0;\n        // Create a 10x10 grid of basic land tiles\n        this.tiles = [];\n\n        for(let i: number = 0; i < this.grid_width; i++) {\n            this.tiles[i] = [];\n            for(let j: number = 0; j < this.grid_height; j++) {\n                this.tiles[i][j] = new BaseTile( this._game, i, j );\n            }\n        }\n\n\n        // Create a 10x10 grid of base tiles for water\n        this.lakes = [];\n\n        for(let i: number = 0; i < this.grid_width; i++) {\n            this.lakes[i] = [];\n            for(let j: number = 0; j < this.grid_height; j++) {\n                this.lakes[i][j] = new BaseTile( this._game, i, j );\n                this.lakes[i][j].Disable();\n            }\n        }\n\n\n        // Set up all win conditions\n        //\n\n        if(map_json.properties.disable_policy){\n            this._game.UI.policy_button.visible = false;\n        }\n\n        if(map_json.properties.survey != \"\" && map_json.properties.survey != undefined){\n            this.survey_url = map_json.properties.survey;\n        }\n\n        this.win_complete_circuit = map_json.properties.win_complete_circuit;\n        if ( map_json.properties.build_list != \"\" ){\n            this.build_list = map_json.properties.build_list.split(\"|\");\n        }else{\n            this.build_list = [];\n        }\n\n        this.link_all_items = map_json.properties.link_all_items;\n\n        this.win_population = map_json.properties.win_population;\n\n        this.win_money = map_json.properties.win_money;\n        this.num_ind = map_json.properties.num_ind;\n        this.num_res = map_json.properties.num_res;\n        this.num_agr = map_json.properties.num_agr;\n\n\n\n\n        this.instruction_text = map_json.properties.instructions_feedback;\n        this.goal_text = map_json.properties.goals;\n        this.victory_text = map_json.properties.ending_feedback;\n\n        if( map_json.properties.money ){\n            this._game_money = map_json.properties.money;\n        }\n\n        if( map_json.properties.sandbox ){\n            this.is_sandbox = true;\n        }\n\n        if( map_json.properties.aquifer && map_json.properties.aquifer > 0){\n            this.scenario_aquifer = new AquiferTile(this._game, 0,0);\n            this.scenario_aquifer.max_water_storage = map_json.properties.aquifer;\n            this.scenario_aquifer.current_water_storage = map_json.properties.aquifer;\n        }\n\n        // Construct the world. Starting with layers\n        for ( let i = 0; i < map_json.layers.length; i++ ){\n\n            // Parse out the data. We have a 10x10 grid\n            if(map_json.layers[i].name == \"Objects\"){\n                for ( let x = 0; x < map_json.layers[i].data.length; x++) {\n                    let x_pos = x % 10;\n\n                    // Accounting for tiled's coordinate system\n                    let y_pos = 9 - Math.floor(x / 10);\n\n                    // Zero means it's an empty tile, so don't do anything\n                    if( map_json.layers[i].data[x] != 0) {\n\n                        let temp_num:number = map_json.layers[i].data[x] - 1;\n\n\n                        let type = this.GetTypeForTileNumber(temp_num.toString());\n\n                        this.CreateAt(type, x_pos, y_pos, \"\", false);\n\n                    }\n                }\n            }\n\n            // TODO - make this work for different lake tiles\n            if(map_json.layers[i].name == \"Lake\"){\n                for ( let x = 0; x < map_json.layers[i].data.length; x++) {\n                    let x_pos = x % 10;\n\n                    // Accounting for tiled's coordinate system\n                    let y_pos = 9 - Math.floor(x / 10);\n\n                    // Zero means it's an empty tile, so don't do anything\n                    if( map_json.layers[i].data[x] != 0) {\n\n                        this.CreateAt(\"lake\", x_pos, y_pos, \"\", false);\n\n                    }\n\n                    if(map_json.layers[i].data[x] == 10) {\n                        this.lakes[x_pos][y_pos].is_source = true;\n                    }\n                }\n            }\n        }\n        this.ShowInstructionText();\n    }\n\n    ShowInstructionText() {\n        this._game.UI.notification.HidePortrait();\n        this._game.UI.info_panel.showMessageInfo(this.instruction_text);\n    }\n\n    ShowHelpText() {\n        this._game.UI.notification.HidePortrait();\n\n        this._game.UI.info_panel.showMessageInfo(GameData.getVar(\"tutorial_text\"));\n    }\n\n    ShowGoalText() {\n        this._game.UI.notification.HidePortrait();\n        this._game.UI.info_panel.showMessageInfo(this.goal_text);\n    }\n\n    GetTypeForTileNumber(num: string) {\n\n        let tiles_json = this._game.game.cache.getJSON('tiles_json');\n\n        let image_path:string = \"\";\n\n        for (let k in tiles_json.tiles ){\n            if( k == num ) {\n                image_path = tiles_json.tiles[k].image;\n            }\n        }\n\n        if( image_path != \"\" ){\n\n            if ( image_path.indexOf(\"res_\") != -1 ){\n                return \"residential\";\n            }\n\n            if ( image_path.indexOf(\"source\") != -1 ){\n                return \"source\";\n            }\n\n            if ( image_path.indexOf(\"aquifer\") != -1 ){\n                return \"aquifer\";\n            }\n\n            if ( image_path.indexOf(\"lake\") != -1 ){\n                return \"lake\";\n            }\n\n            if ( image_path.indexOf(\"lakesource\") != -1 ){\n                return \"lakesource\";\n            }\n\n            if ( image_path.indexOf(\"piping\") != -1 ){\n                return \"pipe\";\n            }\n\n            if ( image_path.indexOf(\"watertower\") != -1 ){\n                return \"watertower\";\n            }\n\n            if ( image_path.indexOf(\"ind_\") != -1 ){\n                return \"industrial\";\n            }\n\n            if ( image_path.indexOf(\"agr_\") != -1 ){\n                return \"agricultural\";\n            }\n\n            if ( image_path.indexOf(\"DW\") != -1 ){\n                return \"treatment\";\n            }\n\n            if ( image_path.indexOf(\"WW\") != -1 ){\n                return \"wastewatertreatment\";\n            }\n\n        }\n\n        return \"\";\n\n    }\n\n    // Creation function for tiles\n    // Always destroys a tile before making a new one\n    CreateAt(type:string, x:number, y:number, subtype: string = \"\", cost:boolean = true) {\n\n        // Subtract money from player account\n        let tile_cost = this._game.GetCostForUpgradeAtTile(type, x, y);\n        if(cost && this.game_money !== null && tile_cost){\n            this.game_money -= tile_cost;\n        }\n\n        // Create tile and add it to the game world\n        switch(type) {\n            case \"empty\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new BaseTile(this._game, x, y );\n                break;\n            case \"residential\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new ResidentialTile(this._game, x, y );\n                break;\n            case \"source\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new SourceTile(this._game, x, y   );\n                break;\n            case \"aquifer\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new AquiferTile(this._game, x, y   );\n                break;\n            case \"lake\":\n                this.lakes[x][y].Destroy();\n                this.lakes[x][y] = new LakeTile(this._game, x, y );\n                break;\n            case \"lakesource\":\n                this.lakes[x][y].Destroy();\n                this.lakes[x][y] = new LakeSourceTile(this._game, x, y );\n                break;\n            case \"pipe\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new PipeTile(this._game, x, y );\n                break;\n            case \"watertower\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new WatertowerTile(this._game, x, y );\n                break;\n            case \"industrial\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new IndustrialTile(this._game, x, y );\n                break;\n            case \"agricultural\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new AgriculturalTile(this._game, x, y );\n                break;\n            case \"treatment\":\n\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new TreatmentTile(this._game, x, y );\n                break;\n            case \"coagulation\":\n                if (this.tiles[x][y].name != \"treatment\" ){\n                    this.tiles[x][y].Destroy();\n                    this.tiles[x][y] = new TreatmentTile(this._game, x, y );\n                }\n\n                (this.tiles[x][y] as TreatmentTile).SetTreatment(\"coagulation\");\n                break;\n            case \"filtration\":\n                if (this.tiles[x][y].name != \"treatment\" ){\n                    this.tiles[x][y].Destroy();\n                    this.tiles[x][y] = new TreatmentTile(this._game, x, y );\n                }\n\n                (this.tiles[x][y] as TreatmentTile).SetTreatment(\"filtration\");\n                break;\n            case \"disinfection\":\n                if (this.tiles[x][y].name != \"treatment\" ){\n                    this.tiles[x][y].Destroy();\n                    this.tiles[x][y] = new TreatmentTile(this._game, x, y );\n                }\n\n                (this.tiles[x][y] as TreatmentTile).SetTreatment(\"disinfection\");\n                break;\n            case \"primary\":\n                if (this.tiles[x][y].name != \"wastewatertreatment\" ){\n                    this.tiles[x][y].Destroy();\n                    this.tiles[x][y] = new WasteWaterTreatmentTile(this._game, x, y );\n                }\n\n                (this.tiles[x][y] as WasteWaterTreatmentTile).SetTreatment(\"primary\");\n                break;\n            case \"secondary\":\n                if (this.tiles[x][y].name != \"wastewatertreatment\" ){\n                    this.tiles[x][y].Destroy();\n                    this.tiles[x][y] = new WasteWaterTreatmentTile(this._game, x, y );\n                }\n\n                (this.tiles[x][y] as WasteWaterTreatmentTile).SetTreatment(\"secondary\");\n                break;\n            case \"tertiary\":\n                if (this.tiles[x][y].name != \"wastewatertreatment\" ){\n                    this.tiles[x][y].Destroy();\n                    this.tiles[x][y] = new WasteWaterTreatmentTile(this._game, x, y );\n                }\n\n                (this.tiles[x][y] as WasteWaterTreatmentTile).SetTreatment(\"tertiary\");\n                break;\n\n            case \"wastewatertreatment\":\n                this.tiles[x][y].Destroy();\n                this.tiles[x][y] = new WasteWaterTreatmentTile(this._game, x, y );\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Heartbeat function\n    update() {\n\n        if( !this._game.IsMenuUp() ) {\n            this.CheckForHighlights();\n        }\n\n        this.UpdateAppearances();\n\n    }\n\n    CheckWinCondition() {\n\n        if(this.is_sandbox){\n            return;\n        }\n\n        let has_build_item = false;\n\n\n        if(this.win_complete_circuit){\n            if (!this.has_complete_circuit){\n                return;\n            }\n        }\n\n        if(this.build_list != []){\n\n            for (let x:number = 0; x < this.build_list.length; x++) {\n                has_build_item = false;\n                for (let i: number = 0; i < this.grid_width; i++) {\n                    for (let j: number = 0; j < this.grid_height; j++) {\n                        if(this.tiles[i][j].name == this.build_list[x]) {\n                            has_build_item = true;\n                        }\n                    }\n                }\n                if(!has_build_item){\n                    return;\n                }else{\n                    console.log(\"Has build item\");\n                }\n            }\n        }\n\n\n        if( this.link_all_items ){\n            for (let i: number = 0; i < this.grid_width; i++) {\n                for (let j: number = 0; j < this.grid_height; j++) {\n                    if(this.tiles[i][j].name != \"empty\" && this.tiles[i][j].name != \"pipe\" && this.tiles[i][j].name != \"source\" && !this.tiles[i][j].IsInFlow()  ) {\n\n                        return;\n                    }\n                }\n            }\n        }\n\n       if( this.win_population != -1 && this.population < this.win_population ){\n            return;\n       }\n\n       if( this.win_money != -1 && this._game_money < this.win_money ){\n            return;\n       }\n\n       if (this.num_ind != -1 && this.NumItemsInWorld(\"industrial\") < this.num_ind){\n           return;\n\n       }\n\n\n        if (this.num_res != -1 && this.NumItemsInWorld(\"residential\") < this.num_ind){\n            return;\n\n        }\n\n\n        if (this.num_res != -1 && this.NumItemsInWorld(\"agricultural\") < this.num_ind){\n            return;\n\n        }\n\n        this._game.Win(this.victory_text);\n\n    }\n\n    NumItemsInWorld(item_name:string ){\n\n        let cur_num:number = 0;\n\n        for (let i: number = 0; i < this.grid_width; i++) {\n            for (let j: number = 0; j < this.grid_height; j++) {\n                if(this.tiles[i][j].name == item_name) {\n                    cur_num++;\n                }\n            }\n        }\n        console.log(item_name + \" - \" + cur_num.toString());\n        return cur_num;\n    }\n\n    ResetInFlow() {\n        for(let i: number = 0; i < 10; i++) {\n            for(let j: number = 0; j < 10; j++) {\n                if (this.tiles[i][j] != undefined ) {\n                    this.tiles[i][j].SetInFlow(false);\n                }\n            }\n        }\n    }\n\n    UpdateAppearances() {\n        for(let i: number = 0; i < 10; i++) {\n            for(let j: number = 0; j < 10; j++) {\n                if (this.tiles[i][j] != undefined ) {\n                    this.tiles[i][j].Update();\n                }\n            }\n        }\n\n        let numlakes: number = 0;\n        let quality_total: number = 0;\n\n        for(let i: number = 0; i < 10; i++) {\n            for(let j: number = 0; j < 10; j++) {\n                if (this.lakes[i][j] != undefined && this.lakes[i][j].name != \"empty\") {\n                    numlakes++;\n                    quality_total += this.lakes[i][j].current_quality;\n                }\n            }\n        }\n\n        let alpha:number = 1 - (quality_total / numlakes) ;\n        if (alpha < 0){\n            alpha = 0;\n        }\n        if (numlakes == 0){\n            alpha = 0;\n        }\n\n        this.background_pol.alpha = alpha;\n        this.background.alpha = 1.0 - alpha;\n    }\n\n    // Grab a tile, null if it's off the grid\n    GetTile(x:number, y:number, direction) {\n        switch (direction) {\n            case World.NORTH: return y >= this.grid_height - 1 ? null : this.tiles[x][y + 1];\n            case World.EAST: return x <= 0 ? null : this.tiles[x - 1][y];\n            case World.SOUTH: return y <= 0 ? null : this.tiles[x][y - 1];\n            case World.WEST: return x >= this.grid_width - 1 ? null : this.tiles[x + 1][y];\n            default: return null;\n        }\n    }\n\n    GetLakeTile(x:number, y:number, direction) {\n        switch (direction) {\n            case World.NORTH: return y >= this.grid_height - 1 ? null : this.lakes[x][y + 1];\n            case World.EAST: return x <= 0 ? null : this.lakes[x - 1][y];\n            case World.SOUTH: return y <= 0 ? null : this.lakes[x][y - 1];\n            case World.WEST: return x >= this.grid_width - 1 ? null : this.lakes[x + 1][y];\n            default: return null;\n        }\n    }\n\n    // TODO make sure it only highlights when we don't have a menu up\n    CheckForHighlights () {\n\n        for(let i: number = 0; i < 10; i++) {\n            for(let j: number = 0; j < 10; j++) {\n                if (this.tiles[i][j] != undefined ) {\n\n                        this.tiles[i][j].HideHightlight();\n\n                }\n            }\n        }\n\n        // if( !this._game.UI.IsInfoPanelVisible() ) {\n        if( !this._game.UI.IsAModalOpen() ) {\n            for (let i: number = 0; i < 10; i++) {\n                for (let j: number = 0; j < 10; j++) {\n                    if (this.tiles[i][j] != undefined) {\n\n\n                        if (this.tiles[i][j].CheckHover()) {\n                            this.tiles[i][j].ShowHighlight();\n\n                        } else {\n                            this.tiles[i][j].HideHightlight();\n\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    //The start of the water flow function\n    Probe(){\n\n        this.lakeInputs = [];\n\n        // Assume no circuit, then if we ever discharge back into water, we have a circuit\n        this.has_complete_circuit = false;\n\n        // Step through each source and discharge your water into the system\n        for(let sources_index = 0; sources_index < this.sources.length; sources_index++){\n\n            // Grab our current source\n            let temp_source:SourceTile = this.sources[sources_index];\n\n            // Get the source's name and current neighbors\n            let source_name:string = temp_source.name;\n            let source_neighbors:BaseTile[] =  this._game.GetNeighborTilesFrom(temp_source._x, temp_source._y);\n\n            // Have we pulled water?\n            let is_water_pulled:boolean = false;\n\n            // Currently this code pulls the maximum amount of water from the lake, every time.\n            // For some reason it does this in two steps.\n            // At this point it isn't checking with the lake...\n            let water_pulled_from_lake:number = temp_source.max_water_usage;\n\n\n            // Take water from lake or aquifer.\n            let temp_lake:BaseTile = this.lakes[temp_source._x][temp_source._y];\n\n            if(temp_lake.name == \"lake\"){\n\n                if( temp_lake.current_water_storage > 0 ) {\n                    if (temp_lake.current_water_storage - water_pulled_from_lake >= 0 ) {\n                        temp_lake.current_water_storage -= water_pulled_from_lake;\n\n                    }else{\n                        water_pulled_from_lake = temp_lake.current_water_storage;\n                        temp_lake.current_water_storage = 0;\n                    }\n\n\n                    is_water_pulled = true;\n                }else{\n                    water_pulled_from_lake = 0;\n                }\n\n                temp_source.current_units = water_pulled_from_lake;\n\n            }else{\n                // TODO it is an aquifer - implement that\n            }\n\n            // We did not pull any water, so reset this for the next step, which is the same as above\n            if(!is_water_pulled) {\n                water_pulled_from_lake = temp_source.max_water_usage;\n            }\n\n            let neighbors_to_visit:BaseTile[] = [];\n\n            // Only grab neighbors that haven't been visited, and aren't lakes or empty.\n            for(let n:number = 0; n < 4; n++){\n                if(source_neighbors[n]){\n\n                    temp_lake = this.lakes[source_neighbors[n]._x][source_neighbors[n]._y];\n\n\n\n                    // if on lake tile pull from there, else pull from aquifer.\n                    // If we haven't already drawn water, and it's a lake, draw from it.\n                    if(!is_water_pulled && temp_lake.name == 'lake'){\n                        if( temp_lake.current_water_storage > 0 ) {\n                            if (temp_lake.current_water_storage - water_pulled_from_lake >= 0 ) {\n                                temp_lake.current_water_storage -= water_pulled_from_lake;\n\n                            }else{\n                                water_pulled_from_lake = temp_lake.current_water_storage;\n                                temp_lake.current_water_storage = 0;\n                            }\n\n                            temp_source.current_units = water_pulled_from_lake;\n                            is_water_pulled = true;\n                        }\n                    }\n\n\n\n                    // Create list of Neighbors to visit with water. Don't include empty or source type tiles.\n                    if( this.visited.indexOf(source_neighbors[n]) == -1 && source_neighbors[n].name != \"empty\" && source_neighbors[n].name != \"source\"){\n\n                        neighbors_to_visit.push(source_neighbors[n]);\n                    }\n                }\n            }\n\n            // if we didn't pull water, try to pull it from an aquifer\n            // TODO - confirm with Mike about Aquifers, as this code seems to only want to do ONE aquifer per scenerio\n\n            if(!is_water_pulled && this.scenario_aquifer){\n\n                let water_pulled:number;\n\n                if( this.scenario_aquifer.current_water_storage > 0) {\n\n                    if (temp_source.max_water_usage >= this.scenario_aquifer.current_water_storage) {\n                        water_pulled = this.scenario_aquifer.current_water_storage;\n                        this.scenario_aquifer.current_water_storage = 0;\n                    } else {\n                        water_pulled = temp_source.max_water_usage;\n                        this.scenario_aquifer.current_water_storage -= temp_source.max_water_usage;\n                    }\n                }else{\n                    water_pulled = 0;\n                }\n\n                temp_source.current_units = water_pulled;\n            }\n\n\n\n            let current_water_available:number = temp_source.current_units * temp_source.current_quality;\n\n            this.total_usable_water += current_water_available;\n\n            this.visited.push(temp_source);\n\n            // TODO NM - Um. Sources always have a population of zero?\n\n            let temp_current_water_usage:number = temp_source.current_water_usage * temp_source.current_population;\n\n            // Temporary variables to pass flow information to next neighbor\n            temp_source.output_units = current_water_available - (current_water_available * temp_source.evaporation_per_usage);\n            temp_source.output_quality = temp_source.current_quality - (temp_current_water_usage * temp_source.quality_drop_per_usage);\n\n            // Sources can have multiple children. Each gets equal output.\n            let output_per_child = temp_source.output_units / neighbors_to_visit.length;\n\n            for(let n:number = 0; n < neighbors_to_visit.length; n++){\n                let temp_neighbor:BaseTile = neighbors_to_visit[n];\n\n                // Must be a pipe or other non-empty/non-input/non-output. Screened above\n                // TODO check this out, should this be an addition? Maybe we need to zero it out at some point.\n                temp_neighbor.input_units = output_per_child;\n                temp_neighbor.input_quality = temp_source.output_quality;\n\n                // TODO Decrease cell integrity for repair mechanic\n                //temp_neighbor.Degrade(1);\n                // Go to next neighbor\n                this.Flow(temp_source, temp_neighbor);\n            }\n        }\n\n\n\n        if(this.pending.length == 0){\n            //console.log(\"Probe resolving\");\n            this.ResolveFlow();\n        } else {\n            while(this.pending.length > 0){\n                //console.log(\"Probe finishing pending\");\n                // Pending is a list of all pipe branches left to explore.\n                // FinishFlow goes through each just like normal flow()\n                this.FinishFlow();\n            }\n        }\n    }\n\n    // Flow resolves tiles until multiple neighbors are found, then puts itself in the pending list\n    // TODO - investigate - does this mean that a tile mighht be flowed into twice, thus doubling its water every turn?\n    Flow(previous_cell:BaseTile, cell:BaseTile){\n        cell.SetInFlow(true);\n        let cell_name:string  = cell.name;\n\n        // Grab incoming flow\n        // Override the inputs\n        // TODO Should this be additive? Make sure.\n        cell.current_units = cell.input_units;\n        cell.current_quality = cell.input_quality;\n\n        // Tracking the total usable water in the system\n        let current_water_available:number = cell.current_units * cell.current_quality;\n        this.total_usable_water += current_water_available;\n\n        let treatment_modifier:number = 0;\n        let temp_current_water_usage:number = 0;\n        // Usage tile water usage is population times\n        if(cell_name == 'residential' && this._game.policy1Active ) {\n            temp_current_water_usage = cell.current_water_usage * cell.current_population * (1-GameData.getVar(\"policy1\").percent);\n        }if(this._game.policy3Active && (cell_name == 'residential' || cell_name == 'industrial' || cell_name == \"agricultural\")){\n            temp_current_water_usage = cell.current_water_usage * cell.current_population + (cell.current_water_usage * cell.current_population * GameData.getVar(\"policy3\").percent);\n        }else{\n            temp_current_water_usage = cell.current_water_usage * cell.current_population;\n        }\n\n        // Due to policy, we can use more or less water\n        //console.log(this._game._policy_menu.GetPolicy());\n\n        // Do what we should with the water\n        // console.log(cell_name);\n        switch(cell_name){\n            // Pipes just let water flow through\n            case 'pipe':\n                break;\n\n            case 'watertower':\n                // Check if water should be pulled from storage\n                let predicted_water_available:number = this.last_turn_usable_water - this.total_usable_water;\n\n                // If we think we need more water, dump the ENTIRE water tower into the system\n                // TODO maybe not - all of it?\n                if(current_water_available < predicted_water_available){\n                    current_water_available += cell.current_water_storage;\n                    cell.current_water_storage = 0;\n                } else {\n                    // Refill storage\n                    if(cell.current_water_storage < cell.max_water_storage){\n                        let space_left:number = (cell.max_water_usage - cell.current_water_storage);\n\n                        if((current_water_available - space_left) < 0){\n                            cell.current_water_storage += current_water_available;\n                            this.LandTermination(cell);\n                        } else {\n                            cell.current_water_storage += space_left;\n                            current_water_available -= space_left;\n                        }\n                    }\n                }\n                break;\n            case 'wastewater':\n                treatment_modifier = cell.treatment_modifier;\n\n                break;\n            case 'treatment':\n\n                treatment_modifier = cell.treatment_modifier;\n\n                break;\n            case 'agricultural':\n\n                if(current_water_available >= temp_current_water_usage){\n\n                    if(this._game.policy2Active){\n\n                        cell.current_population += cell.usage_increase_with_surplus * this._game.policy2PopulationReduction;\n\n                        if(this._game.policy3Active ){\n                            cell.current_population += (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                        }\n                    }else if( this._game.policy3Active ) {\n                        cell.current_population += cell.usage_increase_with_surplus + (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                    }else{\n                        cell.current_population += cell.usage_increase_with_surplus;\n                    }\n\n                    if(cell.current_population >= cell.max_population){\n                        cell.current_population = cell.max_population;\n                        this.Expand(cell);\n                    }\n\n                    this.money_generated = cell.current_population * cell.money_generated_per_usage;\n                } else {\n\n                    // We don't have enough water, so drop the population and terminate early\n\n                    cell.current_population -= cell.usage_decrease_with_deficit;\n\n                    if(cell.current_population <= 0){\n                        cell.current_population = 0;\n                        this.DisappearFromFlow(cell);\n                    }\n                   // Insufficient water, terminate early.\n                   this.LandTermination(cell);\n\n                }\n\n                (cell as AgriculturalTile).UpdateAppearance();\n                break;\n            case 'residential':\n\n                if(current_water_available >= temp_current_water_usage){\n\n                    if(this._game.policy2Active){\n                        cell.current_population += cell.usage_increase_with_surplus * this._game.policy2PopulationReduction;\n\n                        if(this._game.policy3Active ){\n                            cell.current_population += (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                        }\n                    }else if( this._game.policy3Active ) {\n                        cell.current_population += cell.usage_increase_with_surplus + (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                    }else{\n                        cell.current_population += cell.usage_increase_with_surplus;\n                    }\n\n                    if(cell.current_population > cell.max_population){\n\n                        cell.current_population = cell.max_population;\n                        this.Expand(cell);\n                    }\n                    this.money_generated = cell.current_population * cell.money_generated_per_usage;\n\n                    (cell as ResidentialTile).UpdateAppearance();\n\n                } else { // Insufficient water, terminate early.\n\n                    cell.current_population -= cell.usage_decrease_with_deficit;\n\n                    if(cell.current_population <= 0){\n                        cell.current_population = 0;\n                        this.DisappearFromFlow(cell);\n                    }\n\n                    // Insufficient water, terminate early.\n                    this.LandTermination(cell);\n\n                }\n\n                this.new_population += cell.current_population;\n                // console.log(this.new_population);\n                break;\n            case 'industrial':\n\n                if(current_water_available >= temp_current_water_usage){\n                    if(this._game.policy2Active){\n                        cell.current_population += cell.usage_increase_with_surplus * this._game.policy2PopulationReduction;\n\n                        if(this._game.policy3Active ){\n                            cell.current_population += (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                        }\n                    }else if( this._game.policy3Active ) {\n                        cell.current_population += cell.usage_increase_with_surplus + (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                    }else{\n                        cell.current_population += cell.usage_increase_with_surplus;\n                    }\n\n                    if(cell.current_population >= cell.max_population){\n                        cell.current_population = cell.max_population;\n                        this.Expand(cell);\n                    }\n\n                    this.money_generated = cell.current_population * cell.money_generated_per_usage;\n                } else { // Insufficient water, terminate early.\n                    cell.current_population -= cell.usage_decrease_with_deficit;\n\n                    if(cell.current_population <= 0){\n                        cell.current_population = 0;\n                        this.DisappearFromFlow(cell);\n                    }\n\n                    (cell as IndustrialTile).UpdateAppearance();\n                    // Insufficient water, terminate early.\n                    this.LandTermination(cell);\n\n                }\n\n                this.new_population += cell.current_population;\n\n                break;\n            default:\n\n                break;\n        }\n\n\n\n        this.this_turn_income += Math.round(this.money_generated);\n        this.money_generated = 0;\n\n\n        let cell_neighbors:BaseTile[] = this._game.GetNeighborTilesFrom(cell._x, cell._y);\n\n        let neighbors_to_visit:BaseTile[] = [];\n\n        for(let n:number = 0; n < 4; n++){\n            if(cell_neighbors[n] != null && cell_neighbors[n] != previous_cell && this.visited.indexOf(cell_neighbors[n]) == -1 && cell_neighbors[n].name != 'empty'){\n                neighbors_to_visit.push(cell_neighbors[n]);\n            }\n        }\n\n        // tempCurWaterUsage = cell.curPopulation * cell.curWaterUsage;\n\n        if(neighbors_to_visit.length == 0){\n            // Decrease cell integrity for repair mechanic\n            this.visited.push(cell);\n\n            if ( neighbors_to_visit.length == 0 ) {\n                let tempLake:BaseTile = this.lakes[cell._x][cell._y];\n\n                if(tempLake.name == \"lake\"){\n                    this.Terminate(cell, tempLake);\n                }else {\n                    this.LandTermination(cell);\n                }\n            }\n\n\n            cell.Degrade(1);\n        } else if(neighbors_to_visit.length > 1){\n            // TODO - investigate - why does this cell push itself to the list if there's more than one neighbor?\n            this.pending.push(cell);\n        } else {\n\n            this.visited.push(cell);\n            for(let n:number = 0; n < neighbors_to_visit.length; n++){\n                let temp_neighbor = neighbors_to_visit[n];\n\n                if(temp_neighbor != previous_cell){\n\n                    //cell.inFlowCircuit = true;\n\n                    this.visited.push(cell);\n\n                    cell.output_units = current_water_available - (temp_current_water_usage * cell.evaporation_per_usage);\n                    cell.output_quality = cell.current_quality - (temp_current_water_usage* cell.quality_drop_per_usage) + treatment_modifier;\n\n                    temp_neighbor.input_units = cell.output_units;\n                    temp_neighbor.input_quality = cell.output_quality;\n\n                   this.Flow(cell, temp_neighbor);\n                   cell.Degrade(1);\n\n                   //let temp_lake:LakeTile = this.lakes[temp_neighbor._x][temp_neighbor._y];\n\n                  // if(temp_lake.name == \"lake\"){\n                   //    this.Terminate(cell, temp_neighbor);\n                   //}\n                }\n            }\n        }\n    }\n\n    ResolveFlow() {\n\n        // Check all squares - if they weren't visited, decrease their populations if appropriate\n        for(let loopX = 0; loopX < this.grid_width; loopX++){\n            for(let loopY = 0; loopY < this.grid_height; loopY++){\n                let cell = this.tiles[loopX][loopY];\n\n                if((cell.name == 'agricultural' || cell.name == 'industrial' || cell.name == 'residential') && this.visited.indexOf(cell) == -1){\n\n                    //cell.inFlowCircuit = false;\n\n                    cell.current_population -= cell.usage_decrease_with_deficit;\n\n                    // Don't generate income\n\n                    this.new_population += cell.current_population;\n\n                    switch (cell.name) {\n                        case 'agricultural':\n                            (cell as AgriculturalTile).UpdateAppearance();\n                            break;\n\n                        case 'industrial':\n                            (cell as IndustrialTile).UpdateAppearance();\n\n                            break;\n                        case 'residential':\n                            (cell as ResidentialTile).UpdateAppearance();\n                            break;\n                    }\n\n                    if(cell.current_population <= 0){\n                        cell.current_population = 0;\n                        this.Disappear(cell);\n                    }\n\n                }\n            }\n        }\n\n        // Diffuse water capacity and quality through lakes and groundwater\n\n        //if(lakeSource){\n            // Recharge the lake.\n            this.StartLakeDiffusion();\n        //}\n\n        if(this.scenario_aquifer){\n            // Recharge the aquifer.\n            if(this.scenario_aquifer.current_water_storage < this.scenario_aquifer.max_water_storage){\n                 this.scenario_aquifer.current_water_storage += this.scenario_aquifer.recharge_amount;\n            }\n\n            if(this.scenario_aquifer.current_water_storage > this.scenario_aquifer.max_water_storage){\n                this.scenario_aquifer.current_water_storage = this.scenario_aquifer.max_water_storage;\n            }\n\n            this.scenario_aquifer.SetPosition();\n        }\n\n\n        this.visited = [];\n        this.pending = [];\n\n        this.last_turn_usable_water = this.total_usable_water;\n        this.total_usable_water = 0;\n\n        //console.log(newPopulation);\n\n        this.population = this.new_population;\n        // console.log(this.new_population);\n        this.new_population = 0;\n\n        if(this._game.policy2Active){\n            this.game_money += this.this_turn_income + (this.this_turn_income * this._game.policy2Cost)\n        }else {\n            this.game_money += this.this_turn_income;\n        }\n\n\n        this.this_turn_income = 0;\n\n        this.UpdateUI();\n\n\n    }\n\n    UpdateUI() {\n        this._game.UI.SetPopulation( Math.round(this.population) );\n        this._game.UI.SetMoney(Math.round(this.game_money));\n    }\n\n    // Resolves any pending elements\n    FinishFlow(){\n        for(let pendingIndex:number = 0; pendingIndex < this.pending.length; pendingIndex++){\n            let cell:BaseTile = this.pending[pendingIndex];\n            let cell_name:string = cell.name;\n            let cell_neighbors:BaseTile[] =  this._game.GetNeighborTilesFrom(cell._x, cell._y);\n\n            cell.current_units = cell.input_units;\n            cell.current_quality = cell.input_quality;\n\n            let current_water_available:number = cell.current_units * cell.current_quality;\n\n            let temp_current_water_useage:number = 0;\n\n            // Usage tile water usage is population times\n            if(cell_name == 'residential' && this._game.policy1Active ) {\n                temp_current_water_useage = cell.current_water_usage * cell.current_population * (1-GameData.getVar(\"policy1\").percent);\n            }if(this._game.policy3Active && (cell_name == 'residential' || cell_name == 'industrial' || cell_name == \"agricultural\")){\n                temp_current_water_useage = cell.current_water_usage * cell.current_population + (cell.current_water_usage * cell.current_population * GameData.getVar(\"policy3\").percent);\n            }else{\n                temp_current_water_useage = cell.current_water_usage * cell.current_population;\n            }\n\n\n            this.total_usable_water += current_water_available;\n\n            let treatment_modifier = 0;\n\n            this.visited.push(cell);\n            // Determine if there's enough water for use\n            switch(cell_name){\n                case 'pipe':\n                    break;\n                case 'watertower':\n                    // Check if water should be pulled from storage\n                    let predicted_water_available = this.last_turn_usable_water - this.total_usable_water;\n\n                    if(current_water_available < predicted_water_available){\n                        current_water_available += cell.current_water_storage;\n                        cell.current_water_storage = 0;\n                    } else {\n                        // Refill storage\n                        if(cell.current_water_storage < cell.max_water_storage){\n                            let space_left = (cell.max_water_storage - cell.current_water_storage);\n\n                            if((current_water_available - space_left) < 0){\n                                cell.current_water_storage += current_water_available;\n                                this.LandTermination(cell);\n\n                            } else {\n                                cell.current_water_storage += space_left;\n                                current_water_available -= space_left;\n                            }\n                        }\n                    }\n                    break;\n                case 'wastewater':\n\n                    treatment_modifier = cell.treatment_modifier;\n\n                    break;\n                case 'treatment':\n\n                    treatment_modifier = cell.treatment_modifier;\n\n                    break;\n                case 'agricultural':\n                    if(current_water_available >= temp_current_water_useage){\n                        if(this._game.policy2Active){\n                            cell.current_population += cell.usage_increase_with_surplus * this._game.policy2PopulationReduction;\n                            if(this._game.policy3Active ){\n                                cell.current_population += (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                            }\n                        }else if( this._game.policy3Active ) {\n                            cell.current_population += cell.usage_increase_with_surplus + (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                        }else{\n                            cell.current_population += cell.usage_increase_with_surplus;\n                        }\n\n                        if(cell.current_population >= cell.max_population){\n                            cell.current_population = cell.max_population;\n                            this.Expand(cell);\n                        }\n\n                        this.money_generated = cell.current_population * cell.money_generated_per_usage;\n                    } else { // Insufficient water, terminate early.\n\n\n\n                        cell.current_population -= cell.usage_decrease_with_deficit;\n\n                        if(cell.current_population <= 0){\n                            cell.current_population = 0;\n                            this.DisappearFromFlow(cell);\n                        }\n\n                        // Don't generate income\n                        this.LandTermination(cell);\n\n                    }\n\n                    this.new_population += cell.current_population;\n                    (cell as AgriculturalTile).UpdateAppearance();\n                    break;\n                case 'residential':\n                    if(current_water_available >= temp_current_water_useage){\n                        if(this._game.policy2Active){\n                            cell.current_population += cell.usage_increase_with_surplus * this._game.policy2PopulationReduction;\n\n                            if(this._game.policy3Active ){\n                                cell.current_population += (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                            }\n                        }else if( this._game.policy3Active ) {\n                            cell.current_population += cell.usage_increase_with_surplus + (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                        }else{\n                            cell.current_population += cell.usage_increase_with_surplus;\n                        }\n\n                        if(cell.current_population >= cell.max_population){\n                            cell.current_population = cell.max_population;\n                            this.Expand(cell);\n                        }\n                        this.money_generated = cell.current_population * cell.money_generated_per_usage;\n\n\n                    } else { // Insufficient water, terminate early.\n\n\n                        cell.current_population -= cell.usage_decrease_with_deficit;\n\n                        if(cell.current_population <= 0){\n                            cell.current_population = 0;\n                            this.DisappearFromFlow(cell);\n                        }\n\n                        // Don't generate income\n                        this.LandTermination(cell);\n\n                    }\n                    (cell as ResidentialTile).UpdateAppearance();\n                    this.new_population += cell.current_population;\n                    break;\n                case 'industrial':\n                    if(current_water_available >= temp_current_water_useage){\n                        if(this._game.policy2Active){\n                            cell.current_population += cell.usage_increase_with_surplus * this._game.policy2PopulationReduction;\n\n                            if(this._game.policy3Active ){\n                                cell.current_population += (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                            }\n                        }else if( this._game.policy3Active ) {\n                            cell.current_population += cell.usage_increase_with_surplus + (cell.usage_increase_with_surplus * GameData.getVar(\"policy3\").percent);\n                        }else{\n                            cell.current_population += cell.usage_increase_with_surplus;\n                        }\n\n                        if(cell.current_population >= cell.max_population){\n                            cell.current_population = cell.max_population;\n                            this.Expand(cell);\n                        }\n\n                        this.money_generated = cell.current_population * cell.money_generated_per_usage;\n                    } else { // Insufficient water, terminate early.\n                        cell.current_population -= cell.usage_decrease_with_deficit;\n\n                        if(cell.current_population <= 0){\n                            cell.current_population = 0;\n                            this.DisappearFromFlow(cell);\n                        }\n\n                        // Don't generate income\n\n                        this.LandTermination(cell);\n                        // return;\n                        (cell as IndustrialTile).UpdateAppearance();\n                    }\n\n                    this.new_population += cell.current_population;\n\n                    break;\n                default:\n                    break;\n            }\n\n\n            this.this_turn_income += Math.round(this.money_generated);\n            this.money_generated = 0;\n\n            let neighbors_to_visit:BaseTile[] = [];\n\n            // Grab all neighbors excluding empty.\n            for(let n:number = 0; n < 4; n++){\n                if(this.visited.indexOf(cell_neighbors[n]) == -1 && cell_neighbors[n] && cell_neighbors[n].name != 'empty' && cell_neighbors[n].name != 'source'){\n                    neighbors_to_visit.push(cell_neighbors[n]);\n                }\n            }\n\n            //cell.inFlowCircuit = true;\n\n\n            // Setup output to next square.\n            cell.output_units = current_water_available - (temp_current_water_useage* cell.evaporation_per_usage);\n            cell.output_quality = cell.current_quality - (temp_current_water_useage * cell.quality_drop_per_usage) + treatment_modifier;\n\n            let output_per_child:number = cell.output_units / neighbors_to_visit.length;\n\n            for(let n:number = 0; n < neighbors_to_visit.length; n++){\n                let temp_neighbor:BaseTile = neighbors_to_visit[n];\n\n                temp_neighbor.input_units = output_per_child;\n                temp_neighbor.input_quality = cell.output_quality;\n\n                // Decrease cell integrity for repair mechanic\n\n                this.Flow(cell, temp_neighbor);\n                cell.Degrade(1);\n\n\n\n            }\n\n\n            // If we have no neighbors to visit, check\n            if ( neighbors_to_visit.length == 0 ) {\n                let tempLake:LakeTile = this.lakes[cell._x][cell._y];\n\n                if(tempLake.name == \"lake\"){\n                    this.Terminate(cell, tempLake);\n                }\n            }\n        }\n        this.ResolveFlow();\n    }\n\n    // When water just gushes out onto land\n    LandTermination( cell:BaseTile = null ) {\n        if(cell && cell.name != \"empty\"){\n            this.CircuitCheckStart(cell);\n        }\n\n    }\n\n    // Check for a terminating circuit\n    CircuitCheckStart(cell:BaseTile) {\n        // TODO Implement this? Currently it just checks if a circuit is complete for a tutorial. There's probably a better way to do it.\n    }\n\n    // When water gushes out into a lake\n    // In preparation for lake diffusion\n    Terminate(previous_cell:BaseTile, terminating_cell:LakeTile ) {\n        this.has_complete_circuit = true;\n\n        this.lakeInputs.push(terminating_cell);\n\n        terminating_cell.input_units = previous_cell.output_units;\n        terminating_cell.input_quality = previous_cell.output_quality;\n\n        terminating_cell.current_units += terminating_cell.input_units;\n        terminating_cell.current_quality = (terminating_cell.input_quality + terminating_cell.current_quality) / 2;\n    }\n\n    // When a tile has max population and enough water, it will expand out into another cell.\n    Expand( cell:BaseTile ) {\n\n\n        let possible_cells:BaseTile[] = [];\n        let randomChoice:number = 0;\n        let temp_neighbor:BaseTile = null;\n        let temp_neighbors:BaseTile[] = [];\n        let temp_cell:BaseTile = null;\n        switch(cell.name){\n            case \"industrial\":\n\n                for(let loopX = 0; loopX < this.grid_width; loopX++){\n                    for(let loopY = 0; loopY < this.grid_height; loopY++){\n                        temp_cell = this.tiles[loopX][loopY];\n\n                        if(temp_cell.name == 'industrial'){\n                            temp_neighbors = this._game.GetNeighborTilesFrom( loopX, loopY );\n\n                            for(let i = 0; i < temp_neighbors.length; i++){\n                                if(temp_neighbors[i] && temp_neighbors[i].name == 'empty'){\n                                    possible_cells.push(temp_neighbors[i]);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                possible_cells = this.removeLakeTiles(possible_cells);\n\n                if(possible_cells.length > 0){\n\n                    randomChoice = Math.floor(Math.random() * possible_cells.length);\n\n                    temp_neighbor = possible_cells[randomChoice];\n\n\n\n                    let data = TileData.getTile(\"IndustrialTile\");\n                    cell.current_population -= data.current_population;\n                    this.CreateAt( \"industrial\", temp_neighbor._x, temp_neighbor._y, \"\", false );\n                }\n\n                break;\n            case \"residential\":\n\n                for(let loopX = 0; loopX < this.grid_width; loopX++){\n                    for(let loopY = 0; loopY < this.grid_height; loopY++){\n                        temp_cell = this.tiles[loopX][loopY];\n\n                        if(temp_cell.name == 'agricultural') {\n                            possible_cells.push(this.tiles[loopX][loopY]);\n                        }else if(temp_cell.name == 'residential'){\n\n                            temp_neighbors = this._game.GetNeighborTilesFrom(loopX, loopY);\n\n                            for(let i = 0; i < temp_neighbors.length; i++){\n                                if(temp_neighbors[i] && temp_neighbors[i].name == 'empty'){\n                                    possible_cells.push(temp_neighbors[i]);\n                                }\n                            }\n                        }\n                    }\n                }\n                // console.log(possibleCells);\n\n                possible_cells = this.removeLakeTiles(possible_cells);\n\n                if(possible_cells.length > 0){\n                    randomChoice = Math.floor(Math.random() * possible_cells.length);\n                    // console.log(randomChoice);\n                    temp_neighbor = possible_cells[randomChoice];\n                    // console.log(tempNeighbor);\n                    let res_data = TileData.getTile(\"ResidentialTile\");\n                    cell.current_population -= res_data.current_population;\n                    this.CreateAt( \"residential\", temp_neighbor._x, temp_neighbor._y, \"\", false );\n                    //world[tempNeighbor.x][tempNeighbor.y].setType(new Residential(world[tempNeighbor.x][tempNeighbor.y]));\n                }\n\n                break;\n            case \"agricultural\":\n\n                for(let loopX = 0; loopX < this.grid_width; loopX++){\n                    for(let loopY = 0; loopY < this.grid_height; loopY++){\n                        if(this.tiles[loopX][loopY].name == 'empty'){\n                            possible_cells.push(this.tiles[loopX][loopY]);\n                        }\n                    }\n                }\n\n                possible_cells = this.removeLakeTiles(possible_cells);\n\n                if(possible_cells.length > 0){\n\n                    randomChoice = Math.floor(Math.random() * possible_cells.length);\n\n                    temp_neighbor = possible_cells[randomChoice];\n                    let ag_data = TileData.getTile(\"AgriculturalTile\");\n                    cell.current_population -= ag_data.current_population;\n                    this.CreateAt( \"agricultural\", temp_neighbor._x, temp_neighbor._y, \"\", false );\n                    //world[tempNeighbor.x][tempNeighbor.y].setType(new Agricultural(this.tiles[tempNeighbor.x][tempNeighbor.y]));\n                }\n\n                break;\n            default:\n\n                break;\n\n        }\n\n    }\n\n    DisappearFromFlow( cell:BaseTile ){\n        if(this.pending.indexOf(cell) != -1){\n            this.pending.splice(this.pending.indexOf(cell), 1);\n        }\n\n        cell.current_population = 0;\n        let _x = cell._x;\n        let _y = cell._y;\n        //cell.inFlowCircuit = false;\n\n        //this.world[cell.x][cell.y].emptyType(new Empty(world[cell.x][cell.y]));\n        //world[cell.x][cell.y].setType(new Pipe(world[cell.x][cell.y]));\n        this.CreateAt(\"pipe\", _x, _y);\n    }\n\n    Disappear( cell:BaseTile ) {\n        if(this.pending.indexOf(cell) != -1){\n            this.pending.splice(this.pending.indexOf(cell), 1);\n        }\n\n        cell.current_population = 0;\n        //cell.inFlowCircuit = false;\n\n        let _x = cell._x;\n        let _y = cell._y;\n\n        this.CreateAt(\"empty\", _x, _y, \"\", false)\n    }\n\n\n\n\n\n\n    StartLakeDiffusion() {\n        // Go through all lakesource tiles, diffusing water out of them\n\n        // Add all sources not in the Inputs to the list\n\n        for(let i: number = 0; i < 10; i++) {\n            for(let j: number = 0; j < 10; j++) {\n                if (this.lakes[i][j] != undefined && this.lakeInputs.indexOf(this.lakes[i][j]) == -1) {\n                    this.lakeInputs.push(this.lakes[i][j]);\n                }\n            }\n        }\n\n        for(let x:number = 0; x < this.lakeInputs.length; x++ ) {\n             this.visitedLakes = [];\n\n             let cell:LakeTile = this.lakeInputs[x];\n             let currentStorage:number = cell.current_water_storage;\n             let maxStorage:number = cell.max_water_storage;\n\n             if (cell.is_source) {\n                 cell.current_quality = .7;\n             }\n\n\n             // Factor evaporation and loss due to quality.\n             let changeInStorage = (currentStorage * cell.current_quality) - (cell.current_water_storage * cell.evaporation_per_usage);\n\n             // Recharge lake cell.\n             if ( this.lakeInputs[x].is_source ) {\n                 changeInStorage += cell.recharge_amount;\n             }\n\n             let netStorage = currentStorage + changeInStorage;\n\n             let excess = 0;\n\n             if(currentStorage > maxStorage){\n                excess = netStorage - maxStorage;\n             }\n\n             let grossStorage = netStorage - excess;\n             cell.current_water_storage = grossStorage;\n\n             if (cell.current_water_storage > cell.max_water_storage){\n                 cell.current_water_storage = cell.max_water_storage;\n             }\n\n             let cellNeighbors = this._game.GetNeighborLakeTilesFrom(cell._x, cell._y);\n\n             let neighborsToVisit = [];\n\n             // Grab all lake neighbors.\n             for(let n = 0; n < 4; n++){\n                if(cellNeighbors[n]){\n                     let tempX = cellNeighbors[n]._x;\n                     let tempY = cellNeighbors[n]._y;\n\n                    let tempLake = this.lakes[tempX][tempY];\n                    if(tempLake.name == \"lake\" && this.visitedLakes.indexOf(cellNeighbors[n]) == -1){\n                        neighborsToVisit.push(cellNeighbors[n]);\n                    }\n                }\n\n             }\n\n             this.visitedLakes.push(cell);\n\n             for(let n:number = 0; n < neighborsToVisit.length; n++){\n             let tempNeighbor:LakeTile = neighborsToVisit[n];\n\n             // Setup output to next square.\n             cell.output_quality = cell.current_quality - (currentStorage * cell.quality_drop_per_usage);\n\n             let outputPerChild = excess / neighborsToVisit.length;\n\n             tempNeighbor.input_units = outputPerChild;\n             tempNeighbor.input_quality = cell.output_quality;\n\n\n             this.diffuse(tempNeighbor);\n             }\n\n        }\n    }\n\n    diffuse( cell:LakeTile ) {\n        let currentStorage:number = cell.current_water_storage;\n        let maxStorage = cell.max_water_storage;\n\n        cell.current_quality = (cell.current_quality + cell.input_quality) / 2;\n\n        // Factor evaporation and loss due to quality.\n        let change_in_storage:number = (currentStorage * cell.current_quality) - (cell.current_water_storage * cell.evaporation_per_usage);\n\n        // Recharge lake cell.\n        // EXCESS MIGHT BE THE INCOMING - CHECK THAT\n\n        if( cell.is_source ) {\n            change_in_storage += cell.recharge_amount + cell.input_units;\n        }else{\n            change_in_storage += cell.input_units;\n        }\n\n        let net_storage:number = currentStorage + change_in_storage;\n\n        let excess:number = 0;\n\n        if(currentStorage > maxStorage){\n            excess = net_storage - maxStorage;\n        }\n\n        let gross_storage:number = net_storage - excess;\n        cell.current_water_storage = gross_storage;\n\n        let cellNeighbors = this._game.GetNeighborLakeTilesFrom(cell._x, cell._y);\n        let neighborsToVisit = [];\n\n        // Grab all lake neighbors.\n        for(let n = 0; n < 4; n++){\n            if(cellNeighbors[n]){\n                //let tempX = cellNeighbors[n]._x;\n                //let tempY = cellNeighbors[n]._y;\n\n                //var tempLake = worldLakes[tempX][tempY];\n                if(cellNeighbors[n].name == \"lake\" && this.visitedLakes.indexOf(cellNeighbors[n]) == -1){\n                    neighborsToVisit.push(cellNeighbors[n]);\n                }\n            }\n\n        }\n\n        this.visitedLakes.push(cell);\n\n        let outputPerChild = excess / neighborsToVisit.length;\n\n        // Setup output to next square.\n        cell.output_quality = cell.current_quality - (currentStorage * cell.quality_drop_per_usage);\n\n        for(let n = 0; n < neighborsToVisit.length; n++){\n\n            let tempNeighbor:BaseTile = neighborsToVisit[n];\n\n            if( this.visitedLakes.indexOf(tempNeighbor) == -1 && outputPerChild > 0 ) {\n\n\n                tempNeighbor.input_units = outputPerChild;\n                tempNeighbor.input_quality = cell.output_quality;\n\n                this.diffuse( tempNeighbor );\n            }\n\n        }\n    }\n\n    removeLakeTiles(tiles:BaseTile[]){\n        return tiles.filter((tile) => {\n                return this.lakes[tile._x][tile._y].name !== \"lake\";\n        });\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/world.ts","import {AudioManager} from \"../audio\";\r\n\r\n// Initial mute state is set in LoadScreen.create() based on localStorage value\r\nexport class MuteButton extends Phaser.Button{\r\n\r\n    constructor(game:Phaser.Game, x:number, y:number, context:Object){\r\n        super(game, x, y, \"watergame\", null, context, null, null, null, null);\r\n        this.onInputUp.add(this.toggleMute, this);\r\n        this.frameName = localStorage.getItem(\"mute\") === \"true\" ?  \"mute_button/speaker_off\" : \"mute_button/speaker\";\r\n    }\r\n\r\n    private toggleMute(){\r\n        AudioManager.toggleMute();\r\n        this.updateFrame();\r\n    }\r\n\r\n    private updateFrame(){\r\n        this.frameName = AudioManager.muted ? \"mute_button/speaker_off\" : \"mute_button/speaker\";\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/mute_button.ts","export class SpeechBubble extends Phaser.Group{\r\n\r\n    private _text:Phaser.Text;\r\n\r\n    private _arrow_size:number = 12;\r\n    private _arrow_position:number = 20;\r\n\r\n    private _rect_radius = 15;\r\n    private _graphics:Phaser.Graphics;\r\n\r\n    public set text(text:string){\r\n        this._text.text = text;\r\n        this.render();\r\n    }\r\n    public set width(n:number){\r\n        this._text.wordWrapWidth = n;\r\n        this.render();\r\n    }\r\n\r\n    constructor(game:Phaser.Game, x:number = 0, y:number = 0, width:number = 300, text:string = \"\"){\r\n        super(game);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        // Create and add text\r\n        this._text = new Phaser.Text(game, 10, 10, text, {font: \"20px sans-serif\", wordWrap: true, wordWrapWidth: width});\r\n\r\n        this._graphics = new Phaser.Graphics(game,0, 0);\r\n\r\n        this.add(this._graphics);\r\n        this.add(this._text);\r\n\r\n        this.render();\r\n    }\r\n\r\n    private render(){\r\n        this._graphics.clear();\r\n        this._graphics.beginFill(0xffffff);\r\n        this._graphics.drawRoundedRect(0,0,this._text.width+20, this._text.height+20, this._rect_radius);\r\n        //this._graphics.drawPolygon(this._arrow);\r\n        this._graphics.drawTriangle([\r\n            new Phaser.Point(0,this._arrow_position),\r\n            new Phaser.Point(0, this._arrow_position + this._arrow_size),\r\n            new Phaser.Point(-Math.sqrt(Math.pow(this._arrow_size, 2) + Math.pow(this._arrow_size/2, 2)), this._arrow_position + this._arrow_size/2)]);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/speech_bubble.ts","export class Boot extends Phaser.State{\r\n    preload(){\r\n        this.load.image(\"menu_background\", \"sprites/unpacked/main_menu/background.png\");\r\n    }\r\n    create(){\r\n        this.game.input.maxPointers = 1;\r\n        this.game.state.start(\"LoadScreen\");\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Boot.ts","/**\n * Created by nathanmishler on 2/13/17.\n */\nimport {World} from \"./world\"\nimport {BaseTile} from \"./base_tile\"\nimport {ConstructionMenu} from \"./ui_objects/construction_menu\"\nimport {UI} from \"./UI\"\nimport {TileData} from \"./tiledata\";\nimport {GameData} from \"./gamedata\";\nimport {InfoPanel} from \"./ui_objects/info_panel\";\nimport {AudioManager} from \"./audio\";\nimport {PolicyMenu} from \"./menus/policymenu\";\n\nexport class GameLogic extends Phaser.State{\n\n    _world:World;\n\n    UI:UI;\n\n    _game_active:boolean;\n\n    _construction_menu:ConstructionMenu;\n\n    _policy_menu:PolicyMenu;\n\n    _world_group:Phaser.Group;\n\n    _paused:Boolean = false;\n\n    _delete_mode:boolean = false;\n    _repair_mode:boolean = false;\n\n    heartbeat_count:number = 0;\n\n    trash_icon:Phaser.Image;\n    repair_icon:Phaser.Image;\n\n    level_id:string;\n\n\n    public policy1Active:boolean = false;\n    public policy3Active:boolean = false;\n    public policy2Active:boolean = false;\n    public policy1TimeLeft:number = 0;\n    public policy3TimeLeft:number = 0;\n    public policy2Cost:number = 0;\n    public policy2PopulationReduction:number = 1;\n\n    constructor(){\n        super();\n\n        this._game_active = false;\n        this._world = new World(this);\n\n    }\n\n    public SetPolicy2Numbers(cost:number, reduct:number) {\n        this.policy2Cost = cost;\n        this.policy2PopulationReduction = reduct;\n    }\n\n    public ActivatePolicy1(){\n        this.policy1TimeLeft = GameData.getVar(\"policy1\").duration * 60;\n        this.policy1Active = true;\n    }\n\n    public ActivatePolicy3(){\n        this.policy3TimeLeft = GameData.getVar(\"policy3\").duration * 60;\n        this.policy3Active = true;\n    }\n\n    public TogglePolicy2(){\n        this.policy2Active = !this.policy2Active;\n    }\n\n    // Init is run separately from the constructor because we might need to create these things later.\n    // Eventually world will get created and destroyed several times a session\n    init(level_id:Object) {\n        TileData.init(this.game);\n        GameData.init(this.game);\n        this.level_id = level_id[\"level\"];\n        // Create the world Layer\n        this._game_active = true;\n        this._world_group = this.game.add.group();\n\n        // Create the UI Layer\n        this.UI = new UI(this.game, this);\n        this.game.add.existing(this.UI);\n\n        this._world.init(this.level_id);\n        this._construction_menu = new ConstructionMenu(this, 100, 100 );\n        this._construction_menu.visible = false;\n        this.UI.add(this._construction_menu);\n\n        this.trash_icon = new Phaser.Image(this.game, 0, 0, \"delete_small\");\n        this.trash_icon.visible = false;\n        this.UI.add(this.trash_icon);\n\n        this.repair_icon = new Phaser.Image(this.game, 0, 0, \"repair_small\");\n        this.repair_icon.visible = false;\n        this.UI.add(this.repair_icon);\n        this.UI.sendToBack(this.repair_icon);\n\n        this._policy_menu = new PolicyMenu(this.game, this);\n        this.UI.add(this._policy_menu);\n        this.UI.bringToTop(this._policy_menu);\n\n    }\n\n\n    EndRepairMode() {\n        this._repair_mode = false;\n        this.repair_icon.visible = false;\n    }\n\n    StartRepairMode() {\n        this._repair_mode = true;\n        this.repair_icon.visible = true;\n        this.UI.delete_button.TurnOff();\n    }\n\n    EndDeleteMode() {\n        this._delete_mode = false;\n        this.trash_icon.visible = false;\n    }\n\n    StartDeleteMode() {\n       this._delete_mode = true;\n       this.trash_icon.visible = true;\n        this.UI.repair_button.TurnOff();\n    }\n\n    update() {\n        this.game.input.update();\n        // Update the menu and tile highlights\n        if(this._game_active){\n\n            this._world.update();\n\n            // Run the world update heartbeat once a second\n            if( !this._paused ) {\n                this.heartbeat_count++;\n                if(this.heartbeat_count == 60){\n                    this._world.ResetInFlow();\n                    this._world.Probe();\n                    this._world.CheckWinCondition();\n                    this.heartbeat_count = 0;\n                }\n\n                if(this.policy1Active){\n                    this.policy1TimeLeft--;\n\n                    if(this.policy1TimeLeft <= 0){\n\n                        this.policy1Active = false;\n                    }\n                }\n\n                if(this.policy3Active){\n                    this.policy3TimeLeft--;\n\n                    if(this.policy3TimeLeft <= 0){\n\n                        this.policy3Active = false;\n                    }\n                }\n\n            }else{\n                this._world.UpdateUI();\n            }\n        }\n\n        this.trash_icon.x = this.game.input.x + 10;\n        this.trash_icon.y = this.game.input.y + 10;\n\n        this.repair_icon.x = this.game.input.x + 10;\n        this.repair_icon.y = this.game.input.y + 10;\n\n\n\n\n    }\n\n    Win(win_text:string) {\n        this._paused = true;\n        this.EndDeleteMode();\n        this.EndRepairMode();\n        AudioManager.playMusic(\"win\");\n\n        this.UI.info_panel.showMessageWin(win_text);\n\n        let completed_levels:string[] = JSON.parse(localStorage.getItem(\"completed_levels\")) || [];\n\n        if (completed_levels.indexOf(this.level_id) == -1 ){\n            completed_levels.push(this.level_id);\n            localStorage.setItem(\"completed_levels\", JSON.stringify(completed_levels));\n        }\n\n\n\n    }\n\n    Pause() {\n        this._paused = true;\n    }\n\n    // TODO - Honor the pause UI, so if the player paused it, then opens an info box, then closes the info box, the game remains paused.\n    UnPause() {\n        if( !this.UI.pause_button.GetIsPaused() ) {\n            this._paused = false;\n        }\n    }\n\n    IsMenuUp ( ) {\n        return this._construction_menu.visible;\n    }\n\n    // Grab neighbors from world tiles\n    // North to west, clockwise, starting at 0\n    // Null if the tiles are out of bounds\n    GetNeighborTilesFrom (x:number, y:number) {\n\n        let neighbors:BaseTile[] = [];\n\n        for(let dir = 0; dir <= 3; dir++) {\n\n            let newDir = this._world.GetTile(x, y, dir);\n\n            neighbors[dir] = newDir;\n\n        }\n        return neighbors;\n    }\n\n    GetNeighborLakeTilesFrom (x:number, y:number) {\n\n        let neighbors:BaseTile[] = [];\n\n        for(let dir = 0; dir <= 3; dir++) {\n\n            let newDir = this._world.GetLakeTile(x, y, dir);\n\n            neighbors[dir] = newDir;\n\n        }\n        return neighbors;\n    }\n\n    GetCostForUpgradeAtTile(id:string, x:number, y:number):number{\n        let current_tile = this._world.tiles[x][y];\n        //console.log(current_tile);\n        // If the id matches the existing tile, it cannot be purchased\n        if(current_tile.name === id || id === \"empty\"){\n            return null;\n        }\n        // If the tile has upgrades, and already has the type installed, it cannot be purchased\n        if(current_tile.hasOwnProperty(\"upgrades\") && current_tile.hasOwnProperty(\"types\") && current_tile[\"types\"].indexOf(id) > -1){\n            return null;\n        }\n        let tile_info = TileData.getTileByType(id);\n\n        if(tile_info.hasOwnProperty(\"upgrades\") && current_tile.hasOwnProperty(\"upgrades\")){\n            return tile_info.cost * (current_tile[\"types\"].length/2 + 1);\n        }\n        return tile_info.cost;\n    }\n\n    OpenSurvey(url: string) {\n        window.open(url, \"theSurvey\");\n        let surveyWrap = document.getElementById(\"surveyWrap\");\n        surveyWrap.style.visibility = \"visible\";\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/gamelogic.ts","import {MuteButton} from \"../ui_objects/mute_button\";\r\n\r\nexport class ChapterSelect extends Phaser.State{\r\n    private _menu_group:Phaser.Group;\r\n    private background:Phaser.Sprite;\r\n    private level_buttons:Phaser.Sprite[];\r\n    private completed_levels:string[];\r\n    private level_data:Object[];\r\n\r\n    mute_button:MuteButton;\r\n    home_button:Phaser.Button;\r\n\r\n    create(){\r\n        this._menu_group = this.game.add.group();\r\n        this.mute_button = this.game.add.existing(new MuteButton(this.game, 20, this.game.world.height -100, this));\r\n        this.home_button = this.game.add.button(120, this.game.world.height - 95, \"watergame\", ()=>{this.game.state.start(\"MainMenu\")}, this, null, \"home_icon\");\r\n        this.background = this.game.add.sprite(0, 0, \"level_select_bg\");\r\n        this._menu_group.add(this.background);\r\n        this._menu_group.add(this.home_button);\r\n        this.completed_levels = JSON.parse(localStorage.getItem(\"completed_levels\")) || [];\r\n\r\n\r\n        this.level_data = this.game.cache.getJSON(\"level_data\");\r\n        for(let i = 0; i < this.level_data.length; i++){\r\n            let level = this.level_data[i];\r\n            let level_id:string = level[\"level_id\"];\r\n\r\n            let sprite = this.game.add.sprite(0,0, level[\"sheet\"], level[\"frame\"]);\r\n            let enabled = i==0 || i <= this.completed_levels.length;\r\n            let button = this.createLevelButton(sprite, level_id, level[\"x\"], level[\"y\"], enabled);\r\n            this._menu_group.add(button);\r\n        }\r\n    }\r\n\r\n    createLevelButton(sprite:Phaser.Sprite, levelid:string, x:number, y:number, enabled:boolean):Phaser.Group{\r\n        let button_group = this.game.add.group();\r\n        button_group.x = x;\r\n        button_group.y = y;\r\n        sprite.anchor = new Phaser.Point(0.5, 0.5);\r\n        button_group.add(sprite);\r\n        if(this.completed_levels.indexOf(levelid.toString()) > -1){\r\n            let green_bg = this.game.add.sprite(0, 0, \"chapterselect\", \"career_green\", button_group);\r\n            green_bg.anchor = new Phaser.Point(0.5, 0.5);\r\n        }\r\n        if(enabled){\r\n            let yellow_bg = this.game.add.sprite(0, 0, \"chapterselect\", \"career_yellow\", button_group);\r\n            yellow_bg.anchor = new Phaser.Point(0.5, 0.5);\r\n            yellow_bg.visible = false;\r\n            sprite.inputEnabled = true;\r\n            sprite.events.onInputOver.add(()=>{\r\n                yellow_bg.visible = true;\r\n                this.game.canvas.style.cursor = \"pointer\";\r\n            });\r\n            sprite.events.onInputOut.add(()=>{\r\n                yellow_bg.visible = false;\r\n                this.game.canvas.style.cursor = \"default\";\r\n            });\r\n            sprite.events.onInputDown.add(()=>{\r\n                this.InitGame(levelid);\r\n            });\r\n        } else {\r\n            sprite.tint = 0x666666;\r\n        }\r\n        return button_group;\r\n    }\r\n\r\n    InitGame(level:string){\r\n        this.game.state.start(\"GameLogic\", true, false, {level: level});\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/menus/chapterselect.ts","import {AudioManager} from \"../audio\";\r\n\r\nexport class LoadScreen extends Phaser.State{\r\n    background:Phaser.Sprite;\r\n    text:Phaser.Text;\r\n\r\n    preload(){\r\n        // Main images pack\r\n        this.load.atlasJSONArray('watergame', 'sprites/packed/water_game_packed_sprites-0.png', 'sprites/packed/water_game_packed_sprites-0.json');\r\n        this.load.atlasJSONArray(\"chapterselect\", \"sprites/packed/level_select_sprites.png\", \"sprites/packed/level_select_sprites.json\");\r\n\r\n        // Animations for creating items\r\n        this.load.atlasJSONArray('create_anims', 'sprites/packed/placement_animations.png', 'sprites/packed/placement_animations.json');\r\n\r\n        // worlds\r\n        this.load.image(\"world_agri\", \"sprites/unpacked/worlds/world_agri.jpg\");\r\n        this.load.image(\"world_arid\", \"sprites/unpacked/worlds/world_arid.jpg\");\r\n        this.load.image(\"world_agri_pol\", \"sprites/unpacked/worlds/world_agri_pollution.png\");\r\n        this.load.image(\"world_arid_pol\", \"sprites/unpacked/worlds/world_arid_pollution.png\");\r\n        this.load.image(\"world_happy\", \"sprites/unpacked/worlds/world_happy.jpg\");\r\n        this.load.image(\"world_happy_pol\", \"sprites/unpacked/worlds/happy_pollution_all.png\");\r\n        this.load.image(\"world_ind\", \"sprites/unpacked/worlds/world_ind.jpg\");\r\n        this.load.image(\"world_ocean\", \"sprites/unpacked/worlds/world_ocean.jpg\");\r\n        this.load.image(\"world_wet\", \"sprites/unpacked/worlds/world_wet.jpg\");\r\n\r\n        this.load.image(\"world_ind_pol\", \"sprites/unpacked/worlds/world_ind_pollution.png\");\r\n        this.load.image(\"world_ocean_pol\", \"sprites/unpacked/worlds/world_ocean_pollution.png\");\r\n        this.load.image(\"world_wet_pol\", \"sprites/unpacked/worlds/world_wet_pollution.png\");\r\n\r\n\r\n        // Aquifer\r\n        this.load.image(\"aquifer_foreground\", \"sprites/unpacked/aquifer/foreground.png\");\r\n        this.load.image(\"aquifer_mask\", \"sprites/unpacked/aquifer/mask.png\");\r\n\r\n        // Single Images\r\n        this.load.image(\"menu_background\", \"sprites/unpacked/main_menu/background.png\");\r\n        this.load.image(\"cb\", \"sprites/unpacked/CB_icon.png\");\r\n        this.load.image(\"level_select_bg\", \"sprites/unpacked/main_menu/career_no_arrows.png\");\r\n        this.load.image(\"cb_full\", \"sprites/unpacked/CB/CB_smaller_trimmed.png\");\r\n        this.load.image(\"cb_win\", \"sprites/unpacked/CB/CB_win.png\");\r\n        this.load.image(\"cb_blocker\", \"sprites/unpacked/CB/CB_blocker.png\");\r\n        this.load.image(\"cb_finish\", \"sprites/unpacked/CB/continue_button.png\");\r\n        this.load.image(\"pause\", \"sprites/unpacked/UI/pause.png\");\r\n        this.load.image(\"resume\", \"sprites/unpacked/UI/resume.png\");\r\n        this.load.image('delete_on', \"sprites/unpacked/UI/trash_on.png\");\r\n        this.load.image('delete_off', \"sprites/unpacked/UI/trash_off.png\");\r\n        this.load.image('delete_small', \"sprites/unpacked/UI/trash_small.png\");\r\n        this.load.image(\"slider_down\", \"sprites/unpacked/UI/grey_sliderDown.png\");\r\n        this.load.image(\"slider_horizontal\", \"sprites/unpacked/UI/grey_sliderHorizontal.png\");\r\n\r\n        this.load.image('yes_button', \"sprites/unpacked/UI/yes_button.png\");\r\n        this.load.image('no_button', \"sprites/unpacked/UI/no_button.png\");\r\n\r\n\r\n        this.load.image('repair_on', \"sprites/unpacked/UI/wrench_on.png\");\r\n        this.load.image('repair_off', \"sprites/unpacked/UI/wrench_off.png\");\r\n        this.load.image('repair_small', \"sprites/unpacked/UI/wrench_small.png\");\r\n\r\n        this.load.image('buttonbg', \"sprites/unpacked/UI/buttonbg.png\");\r\n\r\n        // JSON\r\n        this.load.json('tiles_json', 'map_editor_files/WaterGamePlaceableTiles.json');\r\n        this.load.json('test_scene_json', 'map_editor_files/WaterGameTestScene.json');\r\n        this.load.json(\"tile_data\", \"json/Tile.json\");\r\n        this.load.json(\"construction_menu_data\", \"json/ConstructionMenu.json\");\r\n        this.load.json(\"level_data\", \"json/Levels.json\");\r\n        this.load.json(\"vars\", \"json/Vars.json\");\r\n\r\n        // LEVEL JSON\r\n        this.load.json('scenario_1', 'map_editor_files/Scenario_1.json');\r\n        this.load.json('scenario_2', 'map_editor_files/Scenario_2.json');\r\n        this.load.json('scenario_3', 'map_editor_files/Scenario_3.json');\r\n        this.load.json('scenario_4', 'map_editor_files/Scenario_4.json');\r\n        this.load.json('scenario_5', 'map_editor_files/Scenario_5.json');\r\n        this.load.json('scenario_6', 'map_editor_files/Scenario_6.json');\r\n        this.load.json('scenario_7', 'map_editor_files/Scenario_7.json');\r\n        this.load.json('scenario_8', 'map_editor_files/Scenario_8.json');\r\n        this.load.json('scenario_9', 'map_editor_files/Scenario_9.json');\r\n        this.load.json('scenario_10', 'map_editor_files/Scenario_10.json');\r\n\r\n        this.load.json('sandbox', 'map_editor_files/Sandbox.json');\r\n\r\n        // Audio\r\n        this.load.audio(\"main_theme\", \"sounds/theme.mp3\");\r\n        this.load.audio(\"agriculture\", \"sounds/agricultural.mp3\");\r\n        this.load.audio(\"lose\", \"sounds/lose.mp3\");\r\n        this.load.audio(\"win\", \"sounds/win.mp3\");\r\n\r\n\r\n    }\r\n\r\n    create(){\r\n        this.game.sound.mute = localStorage.getItem(\"mute\") === \"true\";\r\n        this.background = this.game.add.sprite(0, 0, \"menu_background\");\r\n        this.text = this.game.add.text(this.game.world.centerX,250, \"Loading\", {font: \"bold 36px sans-serif\",});\r\n        this.text.anchor = new Phaser.Point(0.5, 0.5);\r\n        if(this.game.load.hasLoaded){\r\n            this.InitMenu();\r\n        } else{\r\n            let show_menu_listener = this.game.load.onLoadComplete.add(()=>{\r\n                this.InitMenu();\r\n                show_menu_listener.detach();\r\n            })\r\n        }\r\n\r\n    }\r\n    InitMenu(){\r\n        // Register all the audio before starting the game\r\n        AudioManager.RegisterSound(\"main_theme\", true);\r\n        AudioManager.RegisterSound(\"agriculture\", true);\r\n        AudioManager.RegisterSound(\"lose\");\r\n        AudioManager.RegisterSound(\"win\");\r\n        this.game.state.start(\"MainMenu\");\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/menus/loading.ts","import {GameLogic} from \"../gamelogic\";\r\nimport {AudioManager} from \"../audio\";\r\nimport {MuteButton} from \"../ui_objects/mute_button\";\r\n\r\nexport class MainMenu extends Phaser.State{\r\n    _menu_group:Phaser.Group;\r\n\r\n    background:Phaser.Sprite;\r\n    career_button:Phaser.Button;\r\n    sandbox_button:Phaser.Button;\r\n    about_button:Phaser.Button;\r\n    how_to_button:Phaser.Button;\r\n\r\n    mute_button:MuteButton;\r\n\r\n    create(){\r\n        this._menu_group = this.game.add.group();\r\n        this.background = this.game.add.sprite(0, 0, \"menu_background\");\r\n        this._menu_group.add(this.background);\r\n\r\n        this.career_button = this.game.add.button(this.game.world.centerX,260,\"watergame\", this.SelectLevel, this, \"menu_buttons/career_glow\", \"menu_buttons/career\", null, null, this._menu_group);\r\n        this.career_button.anchor = new Phaser.Point(0.5,0.5);\r\n\r\n        // TODO: Make this open sandbox mode when sandbox mode exists\r\n        this.sandbox_button = this.game.add.button(this.game.world.centerX,330,\"watergame\", this.StartSandbox, this, \"menu_buttons/sandbox_glow\", \"menu_buttons/sandbox\", null, null, this._menu_group);\r\n        this.sandbox_button.anchor = new Phaser.Point(0.5,0.5);\r\n\r\n        this.how_to_button = this.game.add.button(this.game.world.centerX,400,\"watergame\", this.ViewHowTo, this, \"menu_buttons/how_to_play_glow\", \"menu_buttons/how_to_play\", null, null, this._menu_group);\r\n        this.how_to_button.anchor = new Phaser.Point(0.5,0.5);\r\n\r\n        this.about_button = this.game.add.button(this.game.world.centerX,470,\"watergame\", this.ViewAbout, this, \"menu_buttons/about_glow\", \"menu_buttons/about\", null, null, this._menu_group);\r\n        this.about_button.anchor = new Phaser.Point(0.5,0.5);\r\n\r\n        this.mute_button = this.game.add.existing(new MuteButton(this.game, 20, this.game.world.height -120, this));\r\n\r\n        AudioManager.playMusic(\"main_theme\");\r\n    }\r\n    SelectLevel(){\r\n        this.game.state.start(\"ChapterSelect\", true, false);\r\n    }\r\n    StartSandbox(){\r\n\r\n        this.InitGame(\"sandbox\");\r\n    }\r\n    private ViewHowTo(){\r\n        window.location.assign(\"howtoplay.html\");\r\n    }\r\n    private ViewAbout(){\r\n        window.location.assign(\"about.html\");\r\n    }\r\n    destroy(){\r\n        this._menu_group.destroy(true);\r\n    }\r\n    InitGame(level:string){\r\n        this.game.state.start(\"GameLogic\", true, false, {level: level});\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/menus/mainmenu.ts","/**\n * Created by nathanmishler on 3/15/17.\n */\n\nimport {Notification} from \"./ui_objects/notification\";\nimport {InfoPanel} from \"./ui_objects/info_panel\";\nimport {GameLogic} from \"./gamelogic\";\nimport {PauseButton} from \"./ui_objects/pause_button\";\nimport {DeleteButton} from \"./ui_objects/delete_button\";\nimport {RepairButton} from \"./ui_objects/repair_button\";\nimport {HomeButton} from \"./ui_objects/home_button\";\n\n\nexport class UI extends Phaser.Group{\n\n    population_icon:Phaser.Sprite;\n    population_text:Phaser.Text;\n\n    money_icon:Phaser.Sprite;\n    money_text:Phaser.Text;\n\n    notification:Notification;\n\n    pause_button:PauseButton;\n\n    delete_button:DeleteButton;\n\n    repair_button:RepairButton;\n\n    info_panel:InfoPanel;\n\n    game_logic:GameLogic;\n\n    home_button:HomeButton;\n\n    policy_button:Phaser.Button;\n\n    constructor (game:Phaser.Game, _game_logic:GameLogic ) {\n        super(game);\n\n        this.game_logic = _game_logic;\n\n        this.population_icon = this.game.add.sprite(650, 100, 'watergame', \"population_icon\");\n        this.population_icon.anchor = new Phaser.Point(0.5, 0.5);\n        this.population_icon.scale = new Phaser.Point(.5, .5);\n        this.add(this.population_icon);\n\n\n        this.population_text = new Phaser.Text(this.game, 700, 100, \"0\");\n        this.population_text.anchor = new Phaser.Point(0.5, 0.5);\n        this.add(this.population_text);\n\n        this.money_icon = this.game.add.sprite(650, 50, 'watergame',  \"money_icon\");\n        this.money_icon.anchor = new Phaser.Point(0.5, 0.5);\n        this.money_icon.scale = new Phaser.Point(.5, .5);\n        this.add(this.money_icon);\n\n        this.money_text = new Phaser.Text(this.game, 700, 50, \"0\");\n        this.money_text.anchor = new Phaser.Point(0.5, 0.5);\n        this.add(this.money_text);\n\n        this.notification = new Notification(game, _game_logic);\n        this.add(this.notification);\n\n        this.pause_button = new PauseButton(game, _game_logic);\n        this.add(this.pause_button);\n\n        this.info_panel = new InfoPanel(game, _game_logic);\n        this.add(this.info_panel);\n\n        this.delete_button = new DeleteButton(game, _game_logic);\n        this.add(this.delete_button);\n\n        this.repair_button = new RepairButton(game, _game_logic);\n        this.add(this.repair_button);\n\n        this.home_button = new HomeButton(game, _game_logic);\n        this.add(this.home_button);\n\n        this.policy_button = game.add.button(230, 500, \"watergame\",()=>{\n            _game_logic._policy_menu.Open();\n            game.canvas.style.cursor = \"default\";\n        }, this, null, \"policy_icon\");\n\n        this.add(this.policy_button);\n\n\n    }\n\n    IsAModalOpen(){\n        return this.info_panel.visible || this.home_button.modal_visible || this.game_logic._policy_menu.visible;\n    }\n\n    SetPopulation(pop:number) {\n        this.population_text.text = pop.toString();\n    }\n\n    SetMoney(money:number) {\n        //console.log(\"setting money\");\n        let abbr;\n        let substr_len;\n        if(money >= 1e12) {\n            abbr = 'T';\n            substr_len = 12;\n        }\n        else if(money >= 1e9) {\n            abbr = 'B';\n            substr_len = 9;\n        }\n        else if(money >= 1e6) {\n            abbr = 'M';\n            substr_len = 6;\n        }\n        else if(money >= 1e4) {\n            abbr = 'K';\n            substr_len = 3;\n        }\n        else {\n            abbr = '';\n            substr_len = 0;\n        }\n        let adjusted_money = money.toString();\n        adjusted_money = adjusted_money.substr(0, adjusted_money.length - substr_len) + abbr;\n        this.money_text.text = adjusted_money;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UI.ts","import {PolicyOption} from \"../ui_objects/policy_option\";\r\nimport {GameData} from \"../gamedata\";\r\nimport {GameLogic} from \"../gamelogic\"\r\n\r\nexport class PolicyMenu extends Phaser.Group {\r\n\r\n    private _top_margin = 10; // percent distance from top edge\r\n    private _left_margin = 10; // percent distance from left edge\r\n\r\n    readonly _vertical_margin: number; // calculated distance from top and bottom edges\r\n    readonly _horizontal_margin: number; // calculated distance from left and right edges\r\n    private _policy_buttons: PolicyOption[] = [];\r\n\r\n    private _game_logic:GameLogic;\r\n\r\n    private _policy_data = [\r\n        {id: \"no_policy\", text: \"No Policy\"},\r\n        {id: \"policy1\", text: \"Increase Water Cost\"},\r\n        {id: \"policy2\", text: \"Every 5% decrease in water cost \\n increases incoming population by 1%\"}\r\n\r\n    ];\r\n\r\n    _padding = 15; // pixel distance between edge of modal and content\r\n\r\n    policy1buttontext:Phaser.Text;\r\n    policy1button:Phaser.Button;\r\n\r\n    policy2buttontext:Phaser.Text;\r\n    policy2button:Phaser.Button;\r\n\r\n    policy3buttontext:Phaser.Text;\r\n    policy3button:Phaser.Button;\r\n    \r\n    \r\n    constructor(game: Phaser.Game, logic: GameLogic) {\r\n        super(game);\r\n\r\n        this._game_logic = logic;\r\n\r\n        let graphics = game.add.graphics(0, 0, this);\r\n        graphics.inputEnabled = true;\r\n        graphics.input.useHandCursor = false;\r\n        this.add(graphics);\r\n\r\n        // create background fill\r\n        graphics.beginFill(0xffffff, 0.3);\r\n        graphics.drawRect(0,0, game.width, game.height);\r\n        graphics.endFill();\r\n\r\n        // calculate margins\r\n        this._horizontal_margin = Math.floor(game.width / this._left_margin);\r\n        this._vertical_margin = Math.floor(game.height / this._top_margin);\r\n\r\n        // create menu background\r\n        graphics.beginFill(0xffffff);\r\n        graphics.drawRoundedRect(this._horizontal_margin, this._vertical_margin, game.width - (2 * this._horizontal_margin), game.height - (2 * this._vertical_margin), 15);\r\n        graphics.endFill();\r\n\r\n        // create title\r\n        let title = new Phaser.Text(game, game.width/2 - this._horizontal_margin, this._vertical_margin + this._padding, \"Water Usage Policies\", {align: \"center\"});\r\n        this.add(title);\r\n\r\n\r\n        // Create Policy1 Item\r\n        this.policy1button = game.add.button(0, title.y + title.height + 10, 'buttonbg', this.Policy1Click, this, 2, 1, 0);\r\n        this.policy1buttontext = new Phaser.Text(game, 0, 0,\"$\"+GameData.getVar(\"policy1\").cost.toString(), {align: \"center\", wordWrap: true, wordWrapWidth: 100});\r\n\r\n        this.add(this.policy1button);\r\n        this.policy1button.x = this._horizontal_margin + 10;\r\n        this.policy1button.addChild(this.policy1buttontext);\r\n\r\n        this.policy1buttontext.x = this.policy1button.width/2 - this.policy1buttontext.width/2;\r\n        this.policy1buttontext.y = this.policy1button.height/2 - this.policy1buttontext.height/2;\r\n\r\n        let policy1Explanation = new Phaser.Text(game, 0, 0,\"Encourage Water Conservation: Reduce water use by \" + (GameData.getVar(\"policy1\").percent * 100).toString() + \"% for residential areas only for \" + (GameData.getVar(\"policy1\").duration).toString() + \" seconds.\", {align: \"left\", wordWrap: true, wordWrapWidth: 500});\r\n        policy1Explanation.fontSize = 18;\r\n\r\n        this.policy1button.addChild(policy1Explanation);\r\n        policy1Explanation.x = this.policy1button.width + 10;\r\n\r\n\r\n        // Create Policy2 Items\r\n        this.policy2button = game.add.button(this.policy1button.x, this.policy1button.y + this.policy1button.height + 50, 'buttonbg', this.Policy2Click, this, 2, 1, 0);\r\n        this.policy2buttontext = new Phaser.Text(game, 0, 0, \"Off\", {align: \"center\", wordWrap: true, wordWrapWidth: 100});\r\n        this.policy2button.addChild(this.policy2buttontext);\r\n\r\n\r\n        this.add(this.policy2button);\r\n\r\n        let policy2Explanation = new Phaser.Text(game, 0, 0,\"Raise water rates: in Industrial, Residential, and Agricultural areas with a corresponding drop in population growth.\", {align: \"left\", wordWrap: true, wordWrapWidth: 500});\r\n        policy2Explanation.fontSize = 18;\r\n\r\n        this.policy2button.addChild(policy2Explanation);\r\n        policy2Explanation.x = this.policy2button.width + 10;\r\n\r\n        let option = new PolicyOption(game, this._game_logic, \"policy1\", \"text\", GameData.getVar(\"policy2\").min, GameData.getVar(\"policy2\").max, null);\r\n        //option.x = policy2Explanation.x;\r\n        //option.y = policy2Explanation.y + policy2Explanation.height + 10;\r\n        this.add(option);\r\n        option.x = this._horizontal_margin + policy2Explanation.x + 20;\r\n        option.y = game.height / 2 + 10;\r\n\r\n\r\n        // Create Policy3 Item\r\n        this.policy3button = game.add.button(0, this.policy2button.y + this.policy2button.height + 100, 'buttonbg', this.Policy3Click, this, 2, 1, 0);\r\n        this.policy3buttontext = new Phaser.Text(game, 0, 0,\"$\"+GameData.getVar(\"policy3\").cost.toString(), {align: \"center\", wordWrap: true, wordWrapWidth: 100});\r\n\r\n        this.add(this.policy3button);\r\n        this.policy3button.x = this._horizontal_margin + 10;\r\n        this.policy3button.addChild(this.policy3buttontext);\r\n\r\n        this.policy3buttontext.x = this.policy3button.width/2 - this.policy3buttontext.width/2;\r\n        this.policy3buttontext.y = this.policy3button.height/2 - this.policy3buttontext.height/2;\r\n\r\n        let policy3Explanation = new Phaser.Text(game, 0, 0,\"Encourage growth: Purchase advertising. Growth rates and water consumption increase by  \" + (GameData.getVar(\"policy3\").percent * 100).toString() + \"% for \" + (GameData.getVar(\"policy1\").duration).toString() + \" seconds.\", {align: \"left\", wordWrap: true, wordWrapWidth: 500});\r\n        policy3Explanation.fontSize = 18;\r\n\r\n        this.policy3button.addChild(policy3Explanation);\r\n        policy3Explanation.x = this.policy3button.width + 10;\r\n\r\n\r\n\r\n        //create close button\r\n        let close = game.add.text(game.width-this._horizontal_margin - 40, this._vertical_margin, \"×\", {\r\n            fontSize: 48\r\n        });\r\n\r\n        close.inputEnabled = true;\r\n        close.input.useHandCursor = true;\r\n        close.events.onInputUp.add(this.Close, this);\r\n        this.add(close);\r\n\r\n        this.visible = false;\r\n    }\r\n\r\n    Policy1Click() {\r\n\r\n        if( !this._game_logic.policy1Active && this._game_logic._world.game_money >= GameData.getVar(\"policy1\").cost ) {\r\n            this._game_logic._world.game_money -= GameData.getVar(\"policy1\").cost;\r\n            this._game_logic.ActivatePolicy1();\r\n\r\n        }\r\n\r\n        this.Open();\r\n    }\r\n\r\n    Policy3Click() {\r\n\r\n        if( !this._game_logic.policy3Active && this._game_logic._world.game_money >= GameData.getVar(\"policy3\").cost ) {\r\n            this._game_logic._world.game_money -= GameData.getVar(\"policy3\").cost;\r\n            this._game_logic.ActivatePolicy3();\r\n\r\n        }\r\n\r\n        this.Open();\r\n    }\r\n\r\n    Policy2Click() {\r\n\r\n        this._game_logic.TogglePolicy2();\r\n\r\n       this.Open();\r\n    }\r\n\r\n    Open() {\r\n        this.visible = true;\r\n        this._game_logic.Pause();\r\n\r\n        // If a policy is on, make its button display duration\r\n        if(this._game_logic.policy1Active){\r\n            this.policy1buttontext.text = Math.floor(this._game_logic.policy1TimeLeft/60).toString();\r\n\r\n        }else{\r\n            this.policy1buttontext.text = \"$\"+GameData.getVar(\"policy1\").cost.toString();\r\n        }\r\n\r\n        if(this._game_logic.policy3Active){\r\n            this.policy3buttontext.text = Math.floor(this._game_logic.policy3TimeLeft/60).toString();\r\n\r\n        }else{\r\n            this.policy3buttontext.text = \"$\"+GameData.getVar(\"policy3\").cost.toString();\r\n        }\r\n\r\n        if(this._game_logic.policy2Active){\r\n            this.policy2buttontext.text = \"On\";\r\n\r\n        }else{\r\n            this.policy2buttontext.text = \"Off\";\r\n        }\r\n\r\n\r\n        this.policy1buttontext.x = this.policy1button.width/2 - this.policy1buttontext.width/2;\r\n        this.policy1buttontext.y = this.policy1button.height/2 - this.policy1buttontext.height/2;\r\n\r\n        this.policy2buttontext.x = this.policy2button.width/2 - this.policy2buttontext.width/2;\r\n        this.policy2buttontext.y = this.policy2button.height/2 - this.policy2buttontext.height/2;\r\n\r\n        this.policy3buttontext.x = this.policy3button.width/2 - this.policy3buttontext.width/2;\r\n        this.policy3buttontext.y = this.policy3button.height/2 - this.policy3buttontext.height/2;\r\n\r\n        if( this._game_logic.policy1Active || this._game_logic._world.game_money < GameData.getVar(\"policy1\").cost ) {\r\n            this.policy1button.tint = 0xC0C0C0;\r\n        }else{\r\n            this.policy1button.tint = 0xFFFFFF;\r\n        }\r\n\r\n        if( this._game_logic.policy3Active || this._game_logic._world.game_money < GameData.getVar(\"policy3\").cost ) {\r\n            this.policy3button.tint = 0xC0C0C0;\r\n        }else{\r\n            this.policy3button.tint = 0xFFFFFF;\r\n        }\r\n\r\n        if( this._game_logic.policy2Active ) {\r\n            this.policy2button.tint = 0xC0C0C0;\r\n        }else{\r\n            this.policy2button.tint = 0xFFFFFF;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    Close() {\r\n        this.visible = false;\r\n        this._game_logic.UnPause();\r\n    }\r\n\r\n    GetPolicy () {\r\n        let return_obj = {};\r\n\r\n        for ( let i = 0; i < this._policy_buttons.length; i++ ){\r\n            if(this._policy_buttons[i].is_selected){\r\n                return_obj['id'] = this._policy_buttons[i].id;\r\n                if(return_obj['id'] != \"no_policy\"){\r\n\r\n                    let temp_percent:number = this._policy_buttons[i].percent;\r\n\r\n                    if(return_obj['id'] == 'policy1' ){\r\n                        return_obj['water_cost_change'] = temp_percent;\r\n                        return_obj['population_modifier'] = -(temp_percent * 2);\r\n                    }else{\r\n                        return_obj['water_cost_change'] = -temp_percent;\r\n                        return_obj['population_modifier'] = temp_percent / 5;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return return_obj;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/menus/policymenu.ts","/**\n * Created by nathanmishler on 2/16/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\";\n\nexport class AgriculturalTile extends BaseTile {\n\n    _create_animation: Phaser.Sprite;\n    _frame_name: string;\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n\n        let data = TileData.getTile(\"AgriculturalTile\");\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n\n        this._create_animation = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), \"create_anims\", \"res_10000\");\n        this._create_animation.anchor = new Phaser.Point(0.5, 0.5);\n        this._create_animation.width = 80;\n        this._create_animation.height = 60;\n        this._create_animation.animations.add(\"create\", [\"agr_10000\", \"agr_10001\", \"agr_10002\", \"agr_10003\", \"agr_10004\", \"agr_10005\", \"agr_10006\", \"agr_10007\", \"agr_10008\", \"agr_10009\",\"agr_10010\",\"agr_10011\",\"agr_10012\",\"agr_10013\",\"agr_10014\",\"agr_10015\",\"agr_10016\",\"agr_10017\",\"agr_10018\",\"agr_10019\",\"agr_10020\",\"agr_10021\",\"agr_10022\"], 30, false);\n\n\n        this.game_logic._world_group.add(this._base_sprite);\n        this._base_sprite.visible = false;\n        this.game_logic._world_group.add(this._create_animation);\n\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 60;\n\n        this._create_animation.animations.play(\"create\");\n    }\n\n    Destroy() {\n        this._base_sprite.destroy(true);\n        this._touch_sprite.destroy(true);\n        this._highlight_sprite.destroy(true);\n        this._create_animation.destroy(true);\n    }\n\n    UpdateAppearance() {\n        let increments: number = this.max_population / 3;\n        let _x: number = this._base_sprite.x;\n        let _y: number = this._base_sprite.y;\n        let changed: boolean = false;\n\n        let data = TileData.getTile(\"AgriculturalTile\");\n\n        if (this.current_population <= increments) {\n            if (this._frame_name != data.frame) {\n\n                changed = true;\n                this._frame_name = data.frame;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame);\n            }\n        } else if (this.current_population <= increments * 2) {\n            if (this._frame_name != data.frame1) {\n                changed = true;\n                this._frame_name = data.frame1;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame1);\n            }\n        } else {\n            if (this._frame_name != data.frame2) {\n                changed = true;\n                this._frame_name = data.frame2;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame2);\n            }\n        }\n\n        if (changed) {\n            this._create_animation.visible = false;\n            this._base_sprite.visible = true;\n            this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n\n            this.game_logic._world_group.add(this._base_sprite);\n            this._base_sprite.width = 80;\n            this._base_sprite.height = 60;\n        }\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/agricultural_tile.ts","/**\n * Created by nathanmishler on 2/14/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\";\nimport Point = Phaser.Point;\n\nexport class AquiferTile extends BaseTile {\n\n    _foreground:Phaser.Sprite;\n    _mask:Phaser.Graphics;\n    _test:Phaser.Graphics;\n\n    _foreground_start_pos:number;\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n        this._touch_sprite.destroy();\n\n        this._foreground = this.game_logic.game.add.sprite(0, 0, \"aquifer_foreground\");\n\n        let x_pos:number = 530;\n        let y_pos:number = 600 - this._foreground.height;\n\n        this.game_logic._world_group.add(this._foreground);\n\n        this._foreground.x = x_pos;\n        this._foreground.y = this._foreground_start_pos =  y_pos;\n\n        this._mask = this.game_logic.game.add.graphics(0, 0);\n        this.game_logic._world_group.add(this._mask);\n        //\tShapes drawn to the Graphics object must be filled.\n       this._mask.beginFill(0xffffff);\n\n        //\tHere we'll draw a circle\n        // you can also use rectangle... for the mask shape.\n        // see this example https://phaser.io/examples/v2/sprites/mask\n        let poly = new Phaser.Polygon( [ new Phaser.Point(530, 541), new Phaser.Point(711, 450), new Phaser.Point(711, 544), new Phaser.Point(530, 631)]  );\n        //this._mask.drawPolygon( poly );\n        this._mask.endFill();\n\n        //this._foreground.mask = this._mask;\n\n        let ellipse = new Phaser.Ellipse(620, 541, 181, 90);\n        this._test = this.game_logic.game.add.graphics(620,541);\n        this._test.angle = -25;\n        this._test.beginFill(0xffffff);\n        this._test.drawEllipse(0, 0, 90, 45);\n        this._test.endFill();\n        this._foreground.mask = this._test;\n\n    }\n\n    SetPosition() {\n        let _possible_distance = 550 - this._foreground_start_pos;\n\n        let _percent_unfilled = (this.max_water_storage - this.current_water_storage) / this.max_water_storage;\n\n        this._foreground.y = this._foreground_start_pos + ( _possible_distance * _percent_unfilled );\n        \n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/aquifer_tile.ts","/**\n * Created by nathanmishler on 2/16/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\";\n\nexport class IndustrialTile extends BaseTile {\n\n    _create_animation:Phaser.Sprite;\n    _frame_name:string;\n\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n\n        let data = TileData.getTile(\"IndustrialTile\");\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n\n        this._create_animation = this.game_logic.game.add.sprite(this.DeriveGridX(x,y), this.DeriveGridY(x,y), \"create_anims\", \"res_10000\");\n        this._create_animation.anchor = new Phaser.Point(0.5, 0.5);\n        this._create_animation.width = 80;\n        this._create_animation.height = 60;\n        this._create_animation.animations.add(\"create\", [\"ind_10000\", \"ind_10001\", \"ind_10002\", \"ind_10003\", \"ind_10004\", \"ind_10005\", \"ind_10006\", \"ind_10007\", \"ind_10008\", \"ind_10009\"], 30, false);\n\n\n        this.game_logic._world_group.add(this._base_sprite);\n        this._base_sprite.visible = false;\n        this.game_logic._world_group.add(this._create_animation);\n\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 60;\n\n        this._create_animation.animations.play(\"create\");\n    }\n\n    Destroy() {\n        this._base_sprite.destroy(true);\n        this._touch_sprite.destroy(true);\n        this._highlight_sprite.destroy(true);\n        this._create_animation.destroy(true);\n    }\n\n    UpdateAppearance() {\n        let increments:number = this.max_population / 3;\n        let _x:number = this._base_sprite.x;\n        let _y:number = this._base_sprite.y;\n        let changed:boolean  = false;\n\n        let data = TileData.getTile(\"IndustrialTile\");\n\n        if( this.current_population <= increments ) {\n            if(this._frame_name != data.frame) {\n\n                changed = true;\n                this._frame_name = data.frame;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame);\n            }\n        }else if( this.current_population <= increments * 2 ){\n            if(this._frame_name != data.frame1) {\n                changed = true;\n                this._frame_name = data.frame1;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame1);\n            }\n        }else{\n            if( this._frame_name != data.frame2) {\n                changed = true;\n                this._frame_name = data.frame2;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame2);\n            }\n        }\n\n        if( changed ) {\n            this._create_animation.visible = false;\n            this._base_sprite.visible = true;\n            this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n\n            this.game_logic._world_group.add(this._base_sprite);\n            this._base_sprite.width = 80;\n            this._base_sprite.height = 60;\n        }\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/industrial_tile.ts","/**\n * Created by nathanmishler on 2/16/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\n\nexport class LakeSourceTile extends BaseTile {\n\n    constructor( _game:GameLogic, x:number, y:number ) {\n        super(_game, x, y);\n        this.Disable();\n\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 40;\n\n        // Now tiles can get input, so we know if we are over them or not\n        this._base_sprite.inputEnabled = false;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/lake_source_tile.ts","/**\n * Created by nathanmishler on 2/14/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\n\nexport class LakeTile extends BaseTile {\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this.Disable();\n\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 40;\n\n        // Now tiles can get input, so we know if we are over them or not\n        this._base_sprite.inputEnabled = false;\n\n\n        this._highlight_sprite.visible = true;\n        this._highlight_sprite.alpha = 0;\n        this._highlight_sprite.tint = 0x83AB2C;\n    }\n\n\n    SetTint() {\n\n        //let temp:number = .7 - this.current_quality;\n\n        //this._highlight_sprite.alpha = temp;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/lake_tile.ts","/**\n * Created by nathanmishler on 2/16/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {World} from \"../world\"\nimport {TileData} from \"../tiledata\";\n\nexport class PipeTile extends BaseTile {\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n\n        let data = TileData.getTile(\"PipeTile\");\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 40;\n\n\n    }\n\n    Update() {\n\n        let pipe_id: number = 0;\n\n        let tiles: BaseTile[] = this.game_logic.GetNeighborTilesFrom(this._x, this._y);\n\n        // Find what's connectible and bit shift it, this gives us something in the range of 0000 - 1111\n        for (let dir: number = World.NORTH; dir <= World.WEST; dir++) {\n\n            if (tiles[dir] != null && tiles[dir].connectible) {\n\n                // Shift it one\n                let add: number = dir - 1;\n\n                if (add < World.NORTH) {\n                    add = World.WEST;\n                }\n\n                pipe_id |= (1 << add);\n            }\n\n        }\n\n        let pipe_name: string = \"\";\n\n        if (pipe_id != 0) {\n\n            pipe_name = (pipe_id >>> 0).toString(2);\n            while (pipe_name.length < 4) {\n                pipe_name = \"0\" + pipe_name;\n            }\n\n            pipe_name = \"piping/\" + pipe_name;\n\n        } else {\n            pipe_name = \"piping/0001\";\n        }\n\n        if (pipe_name != this._base_sprite.key) {\n\n            this.current_tint = 0xffffff;\n            this._base_sprite.destroy();\n            this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), 'watergame', pipe_name);\n            this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n            this.game_logic._world_group.add(this._base_sprite);\n            // Setting this because the individual tiles might be much larger than display size\n            this._base_sprite.width = 80;\n            this._base_sprite.height = 60;\n        }\n\n\n\n        this.SetTint();\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/pipe_tile.ts","/**\n * Created by nathanmishler on 2/13/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\";\n\nexport class ResidentialTile extends BaseTile {\n\n    _create_animation:Phaser.Sprite;\n    _frame_name:string;\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n\n        let data = TileData.getTile(\"ResidentialTile\");\n        this._frame_name = data.frame;\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n\n        this._create_animation = this.game_logic.game.add.sprite(this.DeriveGridX(x,y), this.DeriveGridY(x,y), \"create_anims\", \"res_10000\");\n        this._create_animation.anchor = new Phaser.Point(0.5, 0.5);\n        this._create_animation.width = 80;\n        this._create_animation.height = 60;\n        this._create_animation.animations.add(\"create\", [\"res_10000\", \"res_10001\", \"res_10002\", \"res_10003\", \"res_10004\", \"res_10005\", \"res_10006\", \"res_10007\", \"res_10008\", \"res_10009\"], 30, false);\n\n\n        this.game_logic._world_group.add(this._base_sprite);\n        this._base_sprite.visible = false;\n        this.game_logic._world_group.add(this._create_animation);\n\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 60;\n\n        this._create_animation.animations.play(\"create\");\n    }\n\n    Destroy() {\n        this._base_sprite.destroy(true);\n        this._touch_sprite.destroy(true);\n        this._highlight_sprite.destroy(true);\n        this._create_animation.destroy(true);\n    }\n\n    UpdateAppearance() {\n        let increments:number = this.max_population / 3;\n        let _x:number = this._base_sprite.x;\n        let _y:number = this._base_sprite.y;\n        let changed:boolean = false;\n\n        let data = TileData.getTile(\"ResidentialTile\");\n\n        if( this.current_population <= increments ) {\n            if(this._frame_name != data.frame) {\n\n                changed = true;\n                this._frame_name = data.frame;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame);\n            }\n        }else if( this.current_population <= increments * 2 ){\n            if(this._frame_name != data.frame1) {\n                changed = true;\n                this._frame_name = data.frame1;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame1);\n            }\n        }else{\n            if( this._frame_name != data.frame2) {\n                changed = true;\n                this._frame_name = data.frame2;\n                this.game_logic._world_group.remove(this._base_sprite, true);\n                this._base_sprite.visible = true;\n                this._base_sprite = this.game_logic.game.add.sprite(_x, _y, data.sprite_sheet, data.frame2);\n            }\n        }\n\n        if( changed ) {\n            this._create_animation.visible = false;\n            this._base_sprite.visible = true;\n            this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n\n            this.game_logic._world_group.add(this._base_sprite);\n            this._base_sprite.width = 80;\n            this._base_sprite.height = 60;\n        }\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/residential_tile.ts","/**\n * Created by nathanmishler on 2/13/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\"\nimport {World} from \"../world\"\n\nexport class SourceTile extends BaseTile {\n\n    output_units: number = 0;\n    output_quality: number = 0;\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n\n        let data = TileData.getTile(\"SourceTile\");\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 40;\n\n        this.game_logic._world.sources.push(this);\n\n    }\n\n    Destroy() {\n\n        let idx: number = this.game_logic._world.sources.indexOf(this);\n        this.game_logic._world.sources.splice(idx, 1);\n\n        this._base_sprite.destroy(true);\n        this._touch_sprite.destroy(true);\n        this._highlight_sprite.destroy(true);\n    }\n\n\n    Update() {\n\n        // if we are over a lake, update the following...\n        if( this.game_logic._world.lakes[this._x][this._y].name == \"lake\" ) {\n\n            let pipe_id: number = 0;\n\n            let tiles: BaseTile[] = this.game_logic.GetNeighborTilesFrom(this._x, this._y);\n\n            // Find what's connectible and bit shift it, this gives us something in the range of 0000 - 1111\n            for (let dir: number = World.NORTH; dir <= World.WEST; dir++) {\n\n                if (tiles[dir] != null && tiles[dir].connectible) {\n\n                    // Shift it one\n                    let add: number = dir - 1;\n\n                    if (add < World.NORTH) {\n                        add = World.WEST;\n                    }\n\n                    pipe_id |= (1 << add);\n                }\n\n            }\n\n            let pipe_name: string = \"\";\n\n            if (pipe_id != 0) {\n\n                pipe_name = (pipe_id >>> 0).toString(2);\n                while (pipe_name.length < 4) {\n                    pipe_name = \"0\" + pipe_name;\n                }\n\n                pipe_name = \"piping_source/\" + pipe_name;\n\n            } else {\n                pipe_name = \"piping_source/0001\";\n            }\n            //console.log(pipe_name);\n            if (pipe_name != this._base_sprite.key) {\n\n                this.current_tint = 0xffffff;\n                this._base_sprite.destroy();\n                this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), 'watergame', pipe_name);\n                this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n                this.game_logic._world_group.add(this._base_sprite);\n                // Setting this because the individual tiles might be much larger than display size\n                this._base_sprite.width = 80;\n                this._base_sprite.height = 60;\n            }\n\n\n            this.SetTint();\n        }\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/source_tile.ts","/**\n * Created by nathanmishler on 2/16/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\";\n\nexport class TreatmentTile extends BaseTile {\n\n    types: string[] = [];\n    upgrades: Object;\n    _coagulation_sprite:Phaser.Sprite;\n    _filtration_sprite:Phaser.Sprite;\n    _disinfection_sprite:Phaser.Sprite;\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n\n        let data = TileData.getTile(\"TreatmentTile\");\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 60;\n\n        //this.SetTreatment(\"coagulation\");\n       // this.SetTreatment(\"filtration\");\n        //this.SetTreatment(\"disinfection\");\n\n    }\n\n    GetTypesString() {\n        let temp:string = \" \";\n        for (let i:number = 0; i < this.types.length; i++ ){\n            temp += this.types[i];\n            temp += \" \";\n        }\n\n        return temp;\n    }\n\n\n\n   Destroy() {\n       this._base_sprite.destroy(true);\n       this._touch_sprite.destroy(true);\n       this._highlight_sprite.destroy(true);\n\n        if(this._coagulation_sprite != null ){\n            this._coagulation_sprite.destroy(true);\n        }\n\n       if(this._disinfection_sprite != null ){\n           this._disinfection_sprite.destroy(true);\n       }\n\n       if(this._filtration_sprite != null ){\n           this._filtration_sprite.destroy(true);\n       }\n   }\n\n   SetTreatment(type: string) {\n        if (this.types.indexOf(type) == -1) {\n            this.types.push(type);\n\n            switch(type) {\n                case \"coagulation\":\n\n                   // this.treatment_modifier += this.upgrades[\"coagulation\"].treatment_modifier;\n                    this._coagulation_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), this.upgrades[\"coagulation\"].sprite_sheet, this.upgrades[\"coagulation\"].frame);\n\n                    this._coagulation_sprite.anchor = new Phaser.Point(0.5, 0.5);\n                    this._coagulation_sprite.width = 80;\n                    this._coagulation_sprite.height = 60;\n                    break;\n                case \"filtration\":\n\n                    this.treatment_modifier += this.upgrades[\"filtration\"].treatment_modifier;\n                    this._filtration_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), this.upgrades[\"filtration\"].sprite_sheet, this.upgrades[\"filtration\"].frame);\n                    this._filtration_sprite.anchor = new Phaser.Point(0.5, 0.5);\n                    this._filtration_sprite.width = 80;\n                    this._filtration_sprite.height = 60;\n                    break;\n                case \"disinfection\":\n\n                    this.treatment_modifier += this.upgrades[\"disinfection\"].treatment_modifier;\n                    this._disinfection_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), this.upgrades[\"disinfection\"].sprite_sheet, this.upgrades[\"disinfection\"].frame);\n                    this._disinfection_sprite.anchor = new Phaser.Point(0.5, 0.5);\n                    this._disinfection_sprite.width = 80;\n                    this._disinfection_sprite.height = 60;\n                    break;\n            }\n\n        }\n\n        console.log(this.treatment_modifier);\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/treatment_tile.ts","/**\n * Created by nathanmishler on 2/16/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\";\n\nexport class WasteWaterTreatmentTile extends BaseTile {\n\n    types: string[] = [];\n    upgrades:Object;\n\n    _primary_sprite:Phaser.Sprite;\n    _secondary_sprite:Phaser.Sprite;\n    _tertiary_sprite:Phaser.Sprite;\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy();\n\n        let data = TileData.getTile(\"WasteWaterTreatmentTile\");\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 60;\n\n        //this.SetTreatment(\"primary\");\n        //this.SetTreatment(\"secondary\");\n        //this.SetTreatment(\"tertiary\");\n\n    }\n\n    Destroy() {\n        this._base_sprite.destroy(true);\n        this._touch_sprite.destroy(true);\n        this._highlight_sprite.destroy(true);\n\n        if(this._primary_sprite != null ){\n            this._primary_sprite.destroy(true);\n        }\n\n        if(this._secondary_sprite != null ){\n            this._secondary_sprite.destroy(true);\n        }\n\n        if(this._tertiary_sprite != null ){\n            this._tertiary_sprite.destroy(true);\n        }\n    }\n\n    GetTypesString() {\n        let temp:string = \" \";\n        for (let i:number = 0; i < this.types.length; i++ ){\n            temp += this.types[i];\n            temp += \" \";\n        }\n\n        return temp;\n    }\n\n    SetTreatment(type: string) {\n        if (this.types.indexOf(type) == -1) {\n            this.types.push(type);\n\n            switch(type) {\n                case \"primary\":\n                    //let c_data = TileData.getTile(\"primary\");\n                    //this.treatment_modifier += this.upgrades[\"primary\"].treatment_modifier;\n                    this._primary_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), this.upgrades[\"primary\"].sprite_sheet, this.upgrades[\"primary\"].frame);\n\n                    this._primary_sprite.anchor = new Phaser.Point(0.5, 0.5);\n                    this._primary_sprite.width = 80;\n                    this._primary_sprite.height = 60;\n                    break;\n                case \"secondary\":\n                    //let f_data = TileData.getTile(\"secondary\");\n                    //this.treatment_modifier += this.upgrades[\"secondary\"].treatment_modifier;\n                    this._secondary_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), this.upgrades[\"secondary\"].sprite_sheet, this.upgrades[\"secondary\"].frame);\n                    this._secondary_sprite.anchor = new Phaser.Point(0.5, 0.5);\n                    this._secondary_sprite.width = 80;\n                    this._secondary_sprite.height = 60;\n                    break;\n                case \"tertiary\":\n                    //let d_data = TileData.getTile(\"tertiary\");\n                    //this.treatment_modifier += this.upgrades[\"tertiary\"].treatment_modifier;\n                    this._tertiary_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(this._x, this._y), this.DeriveGridY(this._x, this._y), this.upgrades[\"tertiary\"].sprite_sheet, this.upgrades[\"tertiary\"].frame);\n                    this._tertiary_sprite.anchor = new Phaser.Point(0.5, 0.5);\n                    this._tertiary_sprite.width = 80;\n                    this._tertiary_sprite.height = 60;\n                    break;\n            }\n\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/waste_water_treatment_tile.ts","/**\n * Created by nathanmishler on 2/16/17.\n */\nimport {BaseTile} from \"../base_tile\"\nimport {GameLogic} from \"../gamelogic\"\nimport {TileData} from \"../tiledata\";\n\nexport class WatertowerTile extends BaseTile {\n\n    constructor(_game: GameLogic, x: number, y: number) {\n        super(_game, x, y);\n        this._base_sprite.destroy(true);\n\n        let data = TileData.getTile(\"WatertowerTile\");\n        this._base_sprite = this.game_logic.game.add.sprite(this.DeriveGridX(x, y), this.DeriveGridY(x, y), data.sprite_sheet, data.frame);\n        this._base_sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this.game_logic._world_group.add(this._base_sprite);\n\n        // Setting this because the individual tiles might be much larger than display size\n        this._base_sprite.width = 80;\n        this._base_sprite.height = 60;\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tiles/watertower_tile.ts","import Texture = PIXI.Texture;\r\n\r\nexport class ConstructionButton extends Phaser.Sprite{\r\n    item_data:Object;\r\n    enabled:boolean = true;\r\n\r\n    constructor(game:Phaser.Game, x:number, y:number, item_data:Object){\r\n        super(game, x, y, item_data[\"sheet\"], item_data[\"frame\"]);\r\n        this.item_data = item_data;\r\n    }\r\n\r\n    enable(callback:Function, context){\r\n        this.enabled = true;\r\n        this.events.onInputDown.add(callback, context, 10, this.item_data[\"type\"]);\r\n        this.tint = 0xFFFFFF;\r\n    }\r\n\r\n    disable(){\r\n        this.enabled = false;\r\n        this.events.onInputDown.removeAll();\r\n        this.tint = 0x999999;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/construction_button.ts","/**\n * Created by nathanmishler on 2/13/17.\n */\nimport {GameLogic} from \"../gamelogic\";\nimport {TileData} from \"../tiledata\";\nimport DisplayObject = PIXI.DisplayObject;\nimport {ConstructionButton} from \"./construction_button\";\n\nexport class ConstructionMenu extends Phaser.Group{\n\n    game_logic:GameLogic;\n\n    // Pixel location\n    _x:number;\n    _y:number;\n\n    // Current grid location\n    _grid_x:number;\n    _grid_y:number;\n\n    _menu_data:Object;\n\n    private _menu_buttons:ConstructionButton[];\n\n    // _main_menu:Phaser.Sprite[];\n    // _sub_menu_is:Phaser.Sprite[];\n    // _sub_menu_wt:Phaser.Sprite[];\n    // _sub_menu_ww:Phaser.Sprite[];\n\n\n    constructor(_game:GameLogic, x:number, y:number) {\n        super(_game.game);\n\n        this.game_logic = _game;\n\n        this._menu_data = <Object>this.game.cache.getJSON(\"construction_menu_data\");\n\n        this._menu_buttons = [];\n\n        // Keeping track of menus here\n        //this._main_menu = [];\n        //this._sub_menu_is = [];\n        //this._sub_menu_wt = [];\n        //this._sub_menu_ww = [];\n\n        this._x = x;\n        this._y = y;\n\n        this._grid_x = 0;\n        this._grid_y = 0;\n\n        this.createMenu();\n        this.Hide();\n    }\n\n    createMenu(){\n        for (let i=0; i < this._menu_data[\"main_menu\"].length; i++){\n            let item_data = this._menu_data[\"main_menu\"][i];\n            this.addMainMenuItem(item_data);\n        }\n\n        this.ArraySprites(this.children);\n    }\n\n\n    // Create a main menu item, and associated submenus\n    addMainMenuItem(item_data:Object){\n        // Create sprite\n        let sprite:ConstructionButton = new ConstructionButton(this.game, 0,0, item_data);\n        sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this._menu_buttons.push(sprite);\n        this.add(sprite);\n\n        // Events\n        sprite.inputEnabled = true;\n\n        // Handle whether button opens a submenu or creates a tile\n        if(item_data[\"submenu\"]){\n            // if it has a submenu, create the submenu\n            this.createSubmenu(sprite, item_data[\"hover_text\"]);\n            sprite.events.onInputDown.add(()=>{\n                this.HideSubMenus();\n                sprite.children[0].visible = true;\n            })\n        } else {\n            sprite.events.onInputDown.add(()=>{\n                this.game_logic._world.CreateAt(item_data[\"type\"], this._grid_x, this._grid_y);\n                this.Hide();\n            }, this, 0);\n        }\n        //sprite.events.onInputOver.add(()=>{this.game_logic.UI.notification.showMessage(formatted_text);});\n        sprite.events.onInputOver.add(this.ShowItemCost, this, 10, item_data[\"type\"], item_data[\"hover_text\"]);\n        sprite.events.onInputOut.add(()=>{this.game_logic.UI.notification.hideMessage();});\n    }\n\n    createSubmenu(parent:Phaser.Sprite, key:string){\n        // Get submenu data\n        let submenu_items = this._menu_data[\"sub_menus\"][key];\n\n        // Create group to hold buttons\n        let submenu = this.game.add.group();\n        parent.addChild(submenu);\n\n        // Create and add buttons\n        for(let sub_key in submenu_items){\n            if(submenu_items.hasOwnProperty(sub_key)){\n                let sub_item = submenu_items[sub_key];\n                this.addSubMenuItem(submenu, sub_item);\n            }\n        }\n        submenu.visible = false;\n    }\n\n    // Add button to given submenu\n    addSubMenuItem(submenu:Phaser.Group, item_data:Object){\n        // Create sprite\n        let sprite:ConstructionButton = new ConstructionButton(this.game, 0,0, item_data);\n        sprite.anchor = new Phaser.Point(0.5, 0.5);\n        this._menu_buttons.push(sprite);\n        submenu.add(sprite);\n\n        // Events\n        sprite.inputEnabled = true;\n        sprite.input.priorityID = 10;\n        sprite.events.onInputDown.add(()=>{\n            this.game_logic._world.CreateAt(item_data[\"type\"], this._grid_x, this._grid_y);\n            this.Hide();\n        }, this, 0);\n        sprite.events.onInputOver.add(this.ShowItemCost, this, 10, item_data[\"type\"], item_data[\"hover_text\"]);\n        sprite.events.onInputOut.add(()=>{this.game_logic.UI.notification.hideMessage();});\n\n    }\n\n    // Array the main sprites in a circle.\n    ArraySprites(sprites:DisplayObject[]) {\n        let angle:number = 0;\n        let radius:number = 60;\n        let step:number = (2 * Math.PI) / sprites.length;\n\n        for( let i = 0; i < sprites.length; i++ ) {\n\n            let new_XY = this.GetNextXY(radius, angle);\n            sprites[i].x = new_XY[0];\n            sprites[i].y = new_XY[1];\n            sprites[i].visible = true;\n            angle += step;\n            let current_sprite = <Phaser.Sprite>sprites[i];\n            if(current_sprite.children[0]){\n                this.ArraySubmenu(<Phaser.Group>current_sprite.children[0], i)\n            }\n        }\n    }\n\n    ArraySubmenu(submenu:Phaser.Group, array_position:number){\n        let parent_angle:number = (2 * Math.PI) / 7 * array_position; // angle of the parent in the radial submenu\n        let angle:number = 0;\n        let radius:number = 45; // Distance from parent button\n        let step:number = (2 * Math.PI) / 8; // Distance between submenu items, in radians\n\n        angle += parent_angle - (step * (submenu.children.length/2 - 0.5));\n        for( let i = 0; i < submenu.children.length; i++ ) {\n            let new_XY = this.GetNextXY(radius, angle);\n            submenu.children[i].x = new_XY[0];\n            submenu.children[i].y = new_XY[1];\n            submenu.children[i].visible = true;\n            angle += step;\n        }\n\n    }\n\n    HideSubMenus() {\n        for(let i = 0; i < this.children.length; i++){\n            let sprite:Phaser.Sprite = <Phaser.Sprite>this.children[i];\n            if(sprite.children[0]){\n                sprite.children[0].visible = false;\n            }\n        }\n    }\n\n    GetNextXY(radius, angle) {\n        return [((radius) * Math.cos(angle)),  ((radius) * Math.sin(angle))];\n    }\n\n    // Hide it when it isn't in use\n    Hide() {\n        this.visible = false;\n        // So that we can open and close on the same tile\n        this._x = -1000;\n        this._y = -1000;\n\n    }\n\n    // Show this menu on a specific pixel\n    Show(x:number, y:number, grid_x:number, grid_y:number) {\n        let min_x = 100;\n        let max_x = 700;\n        let min_y = 0;\n        let max_y = 500;\n\n        let clamp_x = clamp(x, min_x, max_x);\n        let clamp_y = clamp(y, min_y, max_y);\n\n        if( this._x != clamp_x || this._y != clamp_y ) {\n\n            this._x = clamp_x;\n            this._y = clamp_y;\n\n            this._grid_x = grid_x;\n            this._grid_y = grid_y;\n\n            this.visible = true;\n            this.x = clamp_x;\n            this.y = clamp_y;\n            this.HideSubMenus();\n            this.ArraySprites(this.children);\n            this.updateButtons(this.game_logic._world.game_money );\n        }\n        else{\n            this.Hide();\n        }\n\n        function clamp(num, min, max):number{\n            return Math.min(Math.max(num, min), max);\n        }\n    }\n\n    ShowItemCost(obj, pointer:Phaser.Pointer, type:string, prepend:string = \"\"){\n        //console.log(type);\n        if(type){\n            let cost = this.game_logic.GetCostForUpgradeAtTile(type, this._grid_x, this._grid_y);\n            //console.log(cost);\n            if(cost){\n                this.game_logic.UI.notification.showMessage(prepend + \": $\" + cost.toString());\n            } else {\n                this.game_logic.UI.notification.showMessage(prepend);\n            }\n        } else {\n            this.game_logic.UI.notification.showMessage(prepend);\n        }\n    }\n\n    createTile(button:ConstructionButton, Pointer:Phaser.Pointer, tile_type:string){\n        //console.log(tile_type);\n        this.game_logic._world.CreateAt(tile_type, this._grid_x, this._grid_y);\n        this.Hide();\n    }\n\n    // Sets active/disabled state of each button in the menu, based on affordability\n    // This should disable buttons based on the base tile...\n\n    // TODO: If we are over a lake, disable everything but pipes and the source tile\n    // TODO: If we are over a Waste Water or Treatment tile, disable everything but them\n    updateButtons(current_money:number){\n        if(this.visible){\n\n            let tile_name:string = this.game_logic._world.tiles[this._grid_x][this._grid_y].name;\n\n            let lake_tile_name:string =  this.game_logic._world.lakes[this._grid_x][this._grid_y].name;\n\n\n            for(let i=0; i<this._menu_buttons.length; i++){\n                let button = this._menu_buttons[i];\n                let allowed: boolean = true;\n                if(!button.item_data[\"submenu\"]){\n                    let cost = this.game_logic.GetCostForUpgradeAtTile(button.item_data[\"type\"], this._grid_x, this._grid_y);\n\n                    // Check, are we over a lake? Then check if a button is a pipe or the water sub menu\n                    if( lake_tile_name != \"empty\" ){\n                        if (button.item_data[\"type\"] != 'pipe' && button.item_data[\"type\"] != \"source\" ) {\n                            allowed = false;\n                        }\n                    }\n\n                    if((cost > current_money && button.enabled) || (!allowed && button.enabled)){\n                        button.disable();\n                    } else if(cost <= current_money && !button.enabled && allowed){\n                        button.enable(this.createTile, this);\n                    }\n\n                }else{\n\n                    if( lake_tile_name != \"empty\" ){\n                        if (button.item_data[\"hover_text\"] != 'Potable Water' ) {\n                            allowed = false;\n                        }\n                    }\n\n                    if(!allowed){\n                        button.disable();\n                    }else if(allowed && !button.enabled){\n                        button.enable(()=>{\n                            this.HideSubMenus();\n                            button.children[0].visible = true;\n                        }, this);\n\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/construction_menu.ts","/**\n * Created by nathanmishler on 2/7/18.\n */\n/**\n * Created by nathanmishler on 2/6/18.\n */\n\nimport {GameLogic} from \"../gamelogic\";\n\nexport class DeleteButton extends Phaser.Group{\n\n    private _on:Phaser.Image;\n    private _off:Phaser.Image;\n\n    game_logic:GameLogic;\n\n    _game:Phaser.Game;\n\n    constructor(game:Phaser.Game, logic:GameLogic){\n        super(game);\n        this._game = game;\n        this.game_logic = logic;\n\n        this._on = new Phaser.Image(game, 100, 500, \"delete_on\");\n        this._on.inputEnabled = true;\n        this._on.visible = false;\n        this.add(this._on);\n\n        this._off = new Phaser.Image(game, 100, 500, \"delete_off\");\n        this._off.inputEnabled = true;\n        this._off.visible = true;\n        this.add(this._off);\n\n        game.input.onDown.add(this.Clicked, this);\n    }\n\n    GetIsDeleteMode() {\n        return this._on.visible;\n    }\n\n    Clicked( ){\n\n        if(this._on.input.pointerOver() || this._off.input.pointerOver()) {\n\n            this._on.visible = !this._on.visible;\n            this._off.visible = !this._off.visible;\n\n            if (this._off.visible) {\n                this.game_logic.EndDeleteMode();\n            } else {\n                this.game_logic.StartDeleteMode();\n            }\n        }\n    }\n\n    TurnOff() {\n        this._on.visible = false;\n        this._off.visible = true;\n\n        this.game_logic.EndDeleteMode();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/delete_button.ts","/**\n * Created by nathanmishler on 2/7/18.\n */\n/**\n * Created by nathanmishler on 2/6/18.\n */\n\nimport {GameLogic} from \"../gamelogic\";\nimport {SpeechBubble} from \"./speech_bubble\";\n\nexport class HomeButton extends Phaser.Group {\n\n    game_logic: GameLogic;\n\n    private home_button: Phaser.Button;\n\n    private yes_button: Phaser.Button;\n    private no_button: Phaser.Button;\n    private _text:Phaser.Text;\n    private _graphics:Phaser.Graphics;\n    private _modal_group:Phaser.Group;\n\n    public get modal_visible(){\n        return this._modal_group.visible;\n    }\n\n    constructor(game: Phaser.Game, logic: GameLogic) {\n        super(game);\n        this.game_logic = logic;\n\n        // Create button\n        this.home_button = this.game.add.button(this.game.world.width - 100, this.game.world.height - 95, \"watergame\", ()=>{this.Clicked();}, this, null, \"home_icon\");\n        this.add(this.home_button);\n\n        // Create modal\n        this._text = new Phaser.Text(game, this.game.width / 2, this.game.height/2, \"Quit and return to Main Menu?\", {font: \"20px sans-serif\", wordWrap: false});\n        this._text.x = this._text.x - this._text.width / 2;\n\n        this._graphics = new Phaser.Graphics(game,this._text.x-10, this._text.y - this._text.height/2);\n        this._graphics.clear();\n        this._graphics.beginFill(0xffffff);\n        this._graphics.drawRoundedRect(0,0,this._text.width+20, this._text.height+20, 15);\n\n        this.yes_button = this.game.add.button(this._text.x + 30, this._text.y + this._text.height - 5, \"yes_button\", ()=>{this.YesClicked();}, this, null);\n        this.no_button = this.game.add.button(this._text.x + 160, this._text.y + this._text.height - 5, \"no_button\", ()=>{this.NoClicked();}, this, null);\n\n        this._modal_group = game.add.group();\n        this._modal_group.add(this._graphics);\n        this._modal_group.add(this._text);\n        this._modal_group.add(this.yes_button);\n        this._modal_group.add(this.no_button);\n        this._modal_group.visible = false;\n    }\n\n    Clicked() {\n\n        this._modal_group.visible = true;\n\n        this.game_logic.Pause();\n\n    }\n\n    YesClicked() {\n\n        this.game.state.start(\"MainMenu\", true, false);\n\n    }\n\n    NoClicked() {\n\n        this._modal_group.visible = false;\n        // this._graphics.visible = false;\n        // this._text.visible = false;\n        // this.yes_button.visible = false;\n        // this.no_button.visible = false;\n\n        this.game_logic.UnPause();\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/home_button.ts","import {SpeechBubble} from \"./speech_bubble\";\nimport {GameLogic} from \"../gamelogic\";\n\nexport class InfoPanel extends Phaser.Group{\n\n    private _text_array:string[];\n    private _text_position:number;\n    private _speech_bubble:SpeechBubble;\n    private _portrait_neutral:Phaser.Image;\n    private _portrait_win:Phaser.Image;\n    private _blocker:Phaser.Image;\n    private _finish:Phaser.Image;\n\n    private game_logic:GameLogic;\n\n    public set text(_text:string){\n        this._text_array = _text.split(\"|\");\n        this._text_position = 0;\n        this._speech_bubble.text = this._text_array[this._text_position];\n    }\n\n    constructor(game:Phaser.Game, _game_logic:GameLogic){\n        super(game);\n\n        this.game_logic = _game_logic;\n\n\n        this._blocker = new Phaser.Image(game, 0, 0, \"cb_blocker\");\n        this._blocker.alpha = 0.2;\n        this._blocker.inputEnabled = true;\n        this._blocker.input.priorityID = 0;\n        this.add(this._blocker);\n\n\n        this._speech_bubble = new SpeechBubble(game, 300, 150, 300, \"\");\n        this.add(this._speech_bubble);\n\n        this._portrait_neutral = new Phaser.Image(game, 0, 80, \"cb_full\");\n        this._portrait_neutral.x = 100;\n        this.add(this._portrait_neutral);\n\n        this._portrait_win = new Phaser.Image(game, 0, 50, \"cb_win\");\n        this._portrait_win.width = this._portrait_win.width * .75;\n        this._portrait_win.height = this._portrait_win.height * .75;\n        this._portrait_win.x = 50;\n        this.add(this._portrait_win);\n\n        this._finish = new Phaser.Image(game, 350, 475, \"cb_finish\");\n        this.add(this._finish);\n\n        game.input.onDown.add(this.Clicked, this);\n\n        // add an ok button\n\n    }\n\n    // IsVisible() {\n    //     // return this.is_visible;\n    //     return this.visible\n    // }\n\n    Clicked() {\n        //if(this.is_visible){\n        if(this.visible){\n            if(this._portrait_neutral.visible == true){\n                if(this._text_position === this._text_array.length - 1){\n                    this.hideMessage();\n                    // unpause world\n                } else {\n                    this._text_position++;\n                    this._speech_bubble.text = this._text_array[this._text_position];\n                }\n            }else{\n                // quit to main menu\n\n                if( this.game_logic._world.survey_url == \"\" ) {\n                    this.game.state.start(\"ChapterSelect\", true, false);\n                }else{\n                    this.game_logic.OpenSurvey(this.game_logic._world.survey_url);\n                    this.game.state.start(\"ChapterSelect\", true, false);\n                }\n            }\n        }\n\n    }\n\n    showMessageInfo(text:string){\n        this._blocker.input.priorityID = 100000;\n        this.game_logic.Pause();\n        this.visible = true;\n        this.text = text;\n        this._portrait_neutral.visible = true;\n        this._portrait_win.visible =  false;\n    }\n\n    showMessageWin(text:string){\n        console.log(\"win!\");\n        this._blocker.input.priorityID = 100000;\n        this.visible = true;\n        this.text = text;\n        this._portrait_neutral.visible = false;\n        this._portrait_win.visible =  true;\n    }\n\n    hideMessage(){\n        this._blocker.input.priorityID = 0;\n        this.game_logic.UI.notification.ShowPortrait();\n        this.game_logic.UnPause();\n        this.visible = false;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/info_panel.ts","import {SpeechBubble} from \"./speech_bubble\";\r\nimport {GameLogic} from \"../gamelogic\"\r\n\r\nexport class Notification extends Phaser.Group{\r\n\r\n    private _speech_bubble:SpeechBubble;\r\n    private _portrait:Phaser.Image;\r\n\r\n    _help_button:Phaser.Button;\r\n    _help_button_text:Phaser.Text;\r\n\r\n    _game:GameLogic;\r\n\r\n    public set text(_text:string){\r\n        this._speech_bubble.text = _text;\r\n    }\r\n\r\n    constructor(game:Phaser.Game, _logic:GameLogic){\r\n        super(game);\r\n        this._game = _logic;\r\n        this._speech_bubble = new SpeechBubble(game, 130, 40, 300, \"\");\r\n        this._speech_bubble.visible = false;\r\n        this.add(this._speech_bubble);\r\n\r\n        this._portrait = new Phaser.Image(game, 10, 10, \"cb\");\r\n        this.add(this._portrait);\r\n\r\n        this._portrait.inputEnabled = true;\r\n        this._portrait.events.onInputDown.add(()=>{\r\n            this._game._world.ShowGoalText();\r\n        });\r\n\r\n        // Add the help button\r\n        this._help_button = game.add.button(10, this._portrait.y + this._portrait.height, 'buttonbg', this.HelpClick, this, 2, 1, 0);\r\n        this._help_button_text = new Phaser.Text(game, 0, 0,\"help\", {align: \"center\", wordWrap: true, wordWrapWidth: 100});\r\n\r\n\r\n\r\n        this.addChild(this._help_button);\r\n\r\n        this._help_button.addChild(this._help_button_text);\r\n        this._help_button_text.x = this._help_button.width/2 - this._help_button_text.width/2;\r\n        this._help_button_text.y = this._help_button.height/2 - this._help_button_text.height/2;\r\n\r\n        this._help_button.scale = new Phaser.Point(.5, .5);\r\n    }\r\n\r\n    HelpClick() {\r\n        this._game._world.ShowHelpText();\r\n    }\r\n\r\n    HidePortrait() {\r\n        this._portrait.visible = false;\r\n        this._help_button.visible = false;\r\n\r\n    }\r\n\r\n    ShowPortrait() {\r\n        this._portrait.visible = true;\r\n        this._help_button.visible = true;\r\n    }\r\n\r\n    showMessage(text:string){\r\n        this._speech_bubble.text = text;\r\n        this._speech_bubble.visible = true;\r\n    }\r\n    hideMessage(){\r\n        this._speech_bubble.visible = false;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/notification.ts","/**\n * Created by nathanmishler on 2/6/18.\n */\n\nimport {GameLogic} from \"../gamelogic\";\n\nexport class PauseButton extends Phaser.Group{\n\n    private _resume:Phaser.Image;\n    private _pause:Phaser.Image;\n\n    game_logic:GameLogic;\n\n    _game:Phaser.Game;\n\n    constructor(game:Phaser.Game, logic:GameLogic){\n        super(game);\n        this._game = game;\n        this.game_logic = logic;\n\n        this._pause = new Phaser.Image(game, 50, 520, \"pause\");\n        this._pause.inputEnabled = true;\n        this._pause.visible = true;\n        this.add(this._pause);\n\n        this._resume = new Phaser.Image(game, 50, 520, \"resume\");\n        this._resume.inputEnabled = true;\n        this._resume.visible = false;\n        this.add(this._resume);\n\n        game.input.onDown.add(this.Clicked, this);\n    }\n\n    GetIsPaused() {\n        return this._resume.visible;\n    }\n\n    Clicked( ){\n\n        if(this._pause.input.pointerOver() || this._resume.input.pointerOver()) {\n\n            this._resume.visible = !this._resume.visible;\n            this._pause.visible = !this._pause.visible;\n\n            if (this._pause.visible) {\n                this.game_logic.UnPause();\n            } else {\n                this.game_logic.Pause();\n            }\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/pause_button.ts","import {GameLogic} from \"../gamelogic\"\r\n\r\nimport Rectangle = Phaser.Rectangle;\r\nexport class PolicyOption extends Phaser.Group{\r\n\r\n    graphics:Phaser.Graphics;\r\n    text:Phaser.Text;\r\n\r\n    cost_text:Phaser.Text;\r\n    population_growth_text:Phaser.Text;\r\n    id:string;\r\n\r\n    bounds:Rectangle;\r\n    percent:number;\r\n    public price:number = 0;\r\n    public percent_population:number = 0;\r\n\r\n    // Slider variables\r\n    slider_track:Phaser.Image;\r\n    slider_handle:Phaser.Image;\r\n\r\n    public is_selected:boolean = false;\r\n\r\n    min:number;\r\n    max:number;\r\n\r\n    _logic:GameLogic;\r\n\r\n    constructor(game:Phaser.Game, logic:GameLogic,  id:string, text:string, min:number, max:number, callback:Function){\r\n        super(game);\r\n        this._logic = logic;\r\n        this.id = id;\r\n        this.min = min;\r\n        this.max = max;\r\n        //this.graphics = game.add.graphics(0, 0, this);\r\n        //this.graphics.inputEnabled = true;\r\n        //this.graphics.input.useHandCursor = true;\r\n        //this.add(this.graphics);\r\n        //this.text = game.add.text( 70, 15, text, {fontSize: 15}, this);\r\n        //this.add(this.text);\r\n\r\n        //this.graphics.events.onInputUp.add(()=>{\r\n        //    callback(this);\r\n        //});\r\n        //this.setSelected(false);\r\n\r\n\r\n        // Add slider down\r\n        if( id != \"no_policy\") {\r\n            this.slider_track = new Phaser.Image(game, 0, 0, \"slider_horizontal\");\r\n            this.slider_track.width *= 2;\r\n            this.slider_track.inputEnabled = false;\r\n            this.add(this.slider_track);\r\n\r\n            this.cost_text = game.add.text( this.slider_track.x + this.slider_track.width + 20, this.slider_track.y, \"$\" + min.toString(), {fontSize: 12}, this);\r\n            this.cost_text.y -= this.cost_text.height;\r\n            this.add(this.cost_text);\r\n\r\n            this.population_growth_text = game.add.text( this.slider_track.x + this.slider_track.width + 20, this.slider_track.y, \"%\" + Math.floor(min/max * 100).toString(), {fontSize: 12}, this);\r\n            //this.population_growth_text.y -= this.cost_text.height / 2;\r\n            this.add(this.population_growth_text);\r\n\r\n            this.slider_handle = new Phaser.Image(game, this.slider_track.x, this.slider_track.y, \"slider_down\");\r\n            this.slider_handle.x -= this.slider_handle.width / 2;\r\n            this.slider_handle.y -= this.slider_handle.height / 2;\r\n\r\n\r\n            this.bounds = new Phaser.Rectangle(this.slider_track.x- this.slider_handle.width/2, this.slider_track.y - this.slider_handle.height/2, this.slider_track.width + this.slider_handle.width, 80);\r\n            this.slider_handle.inputEnabled = true;\r\n            this.slider_handle.input.enableDrag(false,false,false,255,this.bounds);\r\n            this.slider_handle.input.allowVerticalDrag = false;\r\n            this.slider_handle.events.onDragStop.add(this.setParameter, this);\r\n\r\n            this.add(this.slider_handle);\r\n        }\r\n\r\n\r\n        this.setParameter();\r\n\r\n    }\r\n\r\n    setSelected(state:boolean){\r\n        /*\r\n        this.is_selected = state;\r\n\r\n        this.graphics.clear();\r\n        this.graphics.lineStyle(5, 0x000000, 1);\r\n        if(state){\r\n            this.graphics.beginFill(0x99ddaa, 1);\r\n        } else {\r\n            this.graphics.beginFill(0xffffff,1 );\r\n        }\r\n        this.graphics.drawCircle(30,30,50);\r\n        this.graphics.endFill();\r\n        */\r\n    }\r\n\r\n\r\n    setParameter() {\r\n\r\n        this.percent =  (this.slider_handle.x - this.bounds.x + this.slider_handle.width/2) / (this.bounds.width );\r\n\r\n        if(Math.floor(this.percent * 100) == 96){\r\n            this.percent = 1;\r\n        }\r\n\r\n        if(Math.floor(this.percent * 100) == 3){\r\n            this.percent = 0;\r\n        }\r\n\r\n        this.price = (this.max-this.min) * this.percent;\r\n\r\n        this.cost_text.text = \"Cost +$\" + this.price.toFixed(2).toString();\r\n\r\n        this.population_growth_text.text = \"Pop Rt. \" + Math.floor((1-this.percent) * 100).toString() + \"%\";\r\n\r\n        this._logic.SetPolicy2Numbers(this.price, 1-this.percent);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n\r\n    function create() {\r\n\r\n    //define the boundary of the handler\r\n    bounds= new Phaser.Rectangle(100,190,500,80);\r\n    var graphics = game.add.graphics(bounds.x, bounds.y);\r\n    graphics.beginFill(0x000077);\r\n    graphics.drawRect(0, 0, bounds.width, bounds.height);\r\n\r\n\r\n    //add empty sprite for input detection\r\n    sprite = game.add.sprite(100, 200,'object');\r\n    sprite.scale.setTo(2);\r\n    sprite.inputEnabled = true;\r\n    sprite.input.enableDrag(false,false,false,255,bounds);\r\n    sprite.input.allowVerticalDrag = false;\r\n    sprite.events.onDragStop.add(setParameter, game);\r\n    min=1;\r\n}\r\n\r\n    function update(){\r\n}\r\n\r\n    function render() {\r\n    game.debug.inputInfo(32, 32);\r\n    game.debug.text(min,200,200);\r\n    game.debug.spriteInputInfo(sprite, 300, 32);\r\n}\r\n\r\n    function setParameter(){\r\n    if(sprite.x>(bounds.width/2)+bounds.x){\r\n        min=((bounds.width+bounds.x-sprite.x-sprite.width)/(bounds.width+bounds.x-sprite.width))*100;\r\n    }\r\n    if(sprite.x<(bounds.width/2)+bounds.x){\r\n        min=((bounds.width+bounds.x-sprite.x)/(bounds.width))*100;\r\n    }\r\n}\r\n*/\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/policy_option.ts","\nimport {GameLogic} from \"../gamelogic\";\n\nexport class RepairButton extends Phaser.Group{\n\n    private _on:Phaser.Image;\n    private _off:Phaser.Image;\n\n    game_logic:GameLogic;\n\n    _game:Phaser.Game;\n\n    constructor(game:Phaser.Game, logic:GameLogic){\n        super(game);\n        this._game = game;\n        this.game_logic = logic;\n\n        this._on = new Phaser.Image(game, 175, 525, \"repair_on\");\n        this._on.inputEnabled = true;\n        this._on.visible = false;\n        this.add(this._on);\n\n        this._off = new Phaser.Image(game, 175, 525, \"repair_off\");\n        this._off.inputEnabled = true;\n        this._off.visible = true;\n        this.add(this._off);\n\n        game.input.onDown.add(this.Clicked, this);\n    }\n\n    GetIsRepairMode() {\n        return this._on.visible;\n    }\n\n    Clicked( ){\n\n        if(this._on.input.pointerOver() || this._off.input.pointerOver()) {\n\n            this._on.visible = !this._on.visible;\n            this._off.visible = !this._off.visible;\n\n            if (this._off.visible) {\n                this.game_logic.EndRepairMode();\n            } else {\n                this.game_logic.StartRepairMode();\n            }\n        }\n    }\n\n    TurnOff() {\n        this._on.visible = false;\n        this._off.visible = true;\n\n        this.game_logic.EndRepairMode();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ui_objects/repair_button.ts","/// <reference path=\"../lib/phaser.d.ts\"/>\nimport {GameLogic} from \"./gamelogic\";\nimport {AudioManager} from \"./audio\";\nimport {LoadScreen} from \"./menus/loading\";\nimport {Boot} from \"./Boot\";\nimport {MainMenu} from \"./menus/mainmenu\";\nimport {ChapterSelect} from \"./menus/chapterselect\";\nimport Input = Phaser.Input;\n\nclass WaterGame extends Phaser.Game{\n\n    constructor() {\n        super(800, 600, Phaser.AUTO, \"gameDiv\", null);\n\n\n        //this.state.add(\"LoadScreen\", LoadScreen, false);\n        this.state.add(\"Boot\", Boot, false);\n        this.state.add(\"LoadScreen\", LoadScreen, false);\n        this.state.add(\"MainMenu\", MainMenu, false);\n        this.state.add(\"ChapterSelect\", ChapterSelect, false);\n        this.state.add(\"GameLogic\", GameLogic, false);\n\n        AudioManager.init(this);\n\n        this.state.start(\"Boot\");\n    }\n}\n\nwindow.onload = () => {\n    let this_game = new WaterGame();\n    let closeSurvey = document.getElementById(\"closeSurvey\");\n    closeSurvey.addEventListener(\"click\", ()=> {\n        console.log(\"click\");\n        let surveyWrap = document.getElementById(\"surveyWrap\");\n        //console.log(surveyWrap);\n        surveyWrap.style.visibility = \"hidden\";\n    })\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts"],"sourceRoot":""}